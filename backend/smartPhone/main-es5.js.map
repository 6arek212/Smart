{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/admin-components/add-customer/add-customer.component.ts","webpack:///src/app/admin-components/add-customer/add-customer.component.html","webpack:///src/app/admin-components/add-device/add-device.component.ts","webpack:///src/app/admin-components/add-device/add-device.component.html","webpack:///src/app/admin-components/admin/admin.component.ts","webpack:///src/app/admin-components/admin/admin.component.html","webpack:///src/app/admin-components/dashboard/charts/vertical-bars/vertical-bars.component.ts","webpack:///src/app/admin-components/dashboard/charts/vertical-bars/vertical-bars.component.html","webpack:///src/app/admin-components/dashboard/customers/customers.component.ts","webpack:///src/app/admin-components/dashboard/customers/customers.component.html","webpack:///src/app/admin-components/dashboard/dashboard/dashboard.component.ts","webpack:///src/app/admin-components/dashboard/dashboard/dashboard.component.html","webpack:///src/app/admin-components/dashboard/info/info.component.ts","webpack:///src/app/admin-components/dashboard/info/info.component.html","webpack:///src/app/admin-components/dashboard/main-dashboard/main-dashboard.component.ts","webpack:///src/app/admin-components/dashboard/main-dashboard/main-dashboard.component.html","webpack:///src/app/admin-components/dashboard/requests-list/requests-list.component.ts","webpack:///src/app/admin-components/dashboard/requests-list/requests-list.component.html","webpack:///src/app/admin-components/dashboard/sms/sms.component.ts","webpack:///src/app/admin-components/dashboard/sms/sms.component.html","webpack:///src/app/admin-components/dashboard/statics.service.ts","webpack:///src/app/admin-components/header/header.component.ts","webpack:///src/app/admin-components/header/header.component.html","webpack:///src/app/admin-components/pick-customer/pick-customer.component.ts","webpack:///src/app/admin-components/pick-customer/pick-customer.component.html","webpack:///src/app/admin-components/repair/add-repair/add-repair.component.ts","webpack:///src/app/admin-components/repair/add-repair/add-repair.component.html","webpack:///src/app/admin-components/repair/repair-details/repair-details.component.ts","webpack:///src/app/admin-components/repair/repair-details/repair-details.component.html","webpack:///src/app/admin-components/repair/repair-list/repair-list.component.ts","webpack:///src/app/admin-components/repair/repair-list/repair-list.component.html","webpack:///src/app/admin-components/services/auth.service.ts","webpack:///src/app/admin-components/services/repair.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/client/client-auth.guard.ts","webpack:///src/app/client/client-dashboard-main/client-add-request/client-add-request.component.ts","webpack:///src/app/client/client-dashboard-main/client-add-request/client-add-request.component.html","webpack:///src/app/client/client-dashboard-main/client-dashboard-main.component.ts","webpack:///src/app/client/client-dashboard-main/client-dashboard-main.component.html","webpack:///src/app/client/client-dashboard-main/client-dashboard/client-dashboard.component.ts","webpack:///src/app/client/client-dashboard-main/client-dashboard/client-dashboard.component.html","webpack:///src/app/client/client-dashboard-main/client-profile/client-profile.component.ts","webpack:///src/app/client/client-dashboard-main/client-profile/client-profile.component.html","webpack:///src/app/client/client-login/client-login.component.ts","webpack:///src/app/client/client-login/client-login.component.html","webpack:///src/app/client/client-main/client-main.component.ts","webpack:///src/app/client/client-main/client-main.component.html","webpack:///src/app/client/client-phone-auth/client-phone-auth.component.ts","webpack:///src/app/client/client-phone-auth/client-phone-auth.component.html","webpack:///src/app/client/client-signup/client-signup.component.ts","webpack:///src/app/client/client-signup/client-signup.component.html","webpack:///src/app/client/forgot-password/forgot-password.component.ts","webpack:///src/app/client/forgot-password/forgot-password.component.html","webpack:///src/app/client/main-page/main-page.component.ts","webpack:///src/app/client/main-page/main-page.component.html","webpack:///src/app/client/services/client-auth.service.ts","webpack:///src/app/client/services/client-info.service.ts","webpack:///src/app/directives/class-directive.directive.ts","webpack:///src/app/error-interceptor.ts","webpack:///src/app/globalServices/cities.service.ts","webpack:///src/app/globalServices/companies.service.ts","webpack:///src/app/globalServices/customers.service.ts","webpack:///src/app/globalServices/devices.service.ts","webpack:///src/app/globalServices/forgot-password.service.ts","webpack:///src/app/globalServices/issues.service.ts","webpack:///src/app/globalServices/requests.service.ts","webpack:///src/app/globalServices/sms.service.ts","webpack:///src/app/models/Customer.ts","webpack:///src/app/models/Device.ts","webpack:///src/app/utils-components/bootstrap-dialog/bootstrap-dialog.component.ts","webpack:///src/app/utils-components/bootstrap-dialog/bootstrap-dialog.component.html","webpack:///src/app/utils-components/dialog-message/dialog-message.component.ts","webpack:///src/app/utils-components/dialog-message/dialog-message.component.html","webpack:///src/app/utils-components/edit-customer-dialog/edit-customer-dialog.component.ts","webpack:///src/app/utils-components/edit-customer-dialog/edit-customer-dialog.component.html","webpack:///src/app/utils-components/edit-phone-dialog/edit-phone-dialog.component.ts","webpack:///src/app/utils-components/edit-phone-dialog/edit-phone-dialog.component.html","webpack:///src/app/utils-components/input-error/input-error.component.ts","webpack:///src/app/utils-components/input-error/input-error.component.html","webpack:///src/app/utils-components/jqueryUtils.ts","webpack:///src/app/utils-components/normal-input-error/normal-input-error.component.ts","webpack:///src/app/utils-components/normal-input-error/normal-input-error.component.html","webpack:///src/app/utils-components/phone-auth/phone-auth.component.ts","webpack:///src/app/utils-components/phone-auth/phone-auth.component.html","webpack:///src/app/utils-components/phone-auth/phone-auth.service.ts","webpack:///src/app/utils-components/statusHandler.ts","webpack:///src/app/utils-components/validators.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","AddCustomerComponent","form","invalid","isFormInvalid","event","phone","controls","target","name","console","log","isnum","test","value","setErrors","errors","phoneNumber","addCustomer","checkPhoneNumber","selector","templateUrl","styleUrls","AddDeviceComponent","repairService","data","viewNames","getCompanies","source","ngControl","triggerValue","getDeviceModelByCompanyID","subscribe","devices","devicesModel","getDeviceCompanies","res","message","companies","device","notes","price","callback","onAddingDevice","onSelected","AdminComponent","authService","autoAuthUser","VerticalBarsComponent","CustomersComponent","customerService","dialog","page1","page2","page3","currentPage","pageSize","totalCustomers","isLoading","getCustomers","customersSub","getCustomersListener","customers","calPagesNeeded","pagesNeeded","search","pages","Math","round","customer","confirm","deleteCustomer","closeAll","open","buttons","title","firstName","lastName","dialogRef","num","onGetingCustomers","prevPage","onPage","nextPage","DashboardComponent","staticsService","legend","showLabels","animations","xAxis","yAxis","showYAxisLabel","showXAxisLabel","xAxisLabel","yAxisLabel","timeline","staticsRecord","showLegened","colorScheme","domain","cardColor","getAnalytics","getNumOf","staticsRecordSub","getAnalyticsListener","numOfSub","getNumOfListener","single","unsubscribe","InfoComponent","cityService","issueService","comapnyService","deviceService","maxDate","Date","minDate","getCites","citiesSub","getCitiesListener","cities","companiesSub","getCompaniesListener","getIssues","issuesSub","getIssuesListener","issues","getDevices","deviceSub","getDevicesListener","city","addCity","issue","addIssue","company","addCompany","released","model","addDevice","onAddingCity","onAddingIssue","onAddingCompany","providers","MainDashboardComponent","isCollapsed","user","getUser","ref","afterClosed","logout","onLogOut","RequestsListComponent","requestService","getRequests","requestsSub","getRequestsListener","requests","totalRequests","max","filter","updateValueAndValidity","date","fromNow","timezoneDate","tz","format","pageData","pageIndex","request","deleteRequest","_id","updateOps","updateReuqest","status","onSearch","onChangeFilter","onPageChange","SmsComponent","smsService","sendMessage","to","toAll","BACKEND","apiUrl","StaticsService","http","numOf","analytics","analyticsSub","get","next","asObservable","providedIn","HeaderComponent","isAuthenticated","getIsAuthenticated","getIsAuthenticatedListener","authStatusAuthSub","PickCustomerComponent","cutomerService","AddRepairComponent","dilaog","viewsName","loadingSub","getIsLoading","width","height","push","index","newArr","dev","i","newViewsList","v","length","repair","addRepair","pickCustomer","onAddingRepair","RepairDetailsComponent","RepairListComponent","pipe","repairs","getRepairs","BACKEND_URL","AuthService","router","isAuthenticatedListener","keepMelogedIn","post","authMethod","username","password","authData","err","setAuthenticated","state","token","expiresInDuration","expiresIn","setAuthTimer","now","expirationDate","getTime","saveAuthData","navigate","clearTimeout","tokenTimer","clearAuthData","navigateToDashBoard","authInfo","getAuthData","duration","setTimeout","localStorage","getItem","setItem","toISOString","removeItem","RepairService","devicesModels","problems","createdAt","routes","path","children","canActivate","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","config","url","options","AppModule","provide","useClass","multi","declarations","bootstrap","entryComponents","AuthInterceptor","clietAuthService","getToken","authReq","clone","headers","set","handle","AuthGuard","childRoute","isAuth","LoginComponent","validators","required","authListenerSubs","isAuthintecated","login","keepMeLogedIn","reset","SignupComponent","selectedItem","validatePassword","validate_password","passwordNotMatch","onValidatePassword","email","gender","onSignUp","authStatusAuth","ClientAuthGuard","clientAuthService","parseUrl","ClientAddRequestComponent","route","citiesService","comapniesService","requestsService","issuesService","mode","issueCheck","control","frObs","create","observer","text","complete","initForm","setUpListeners","checkIfHasParam","paramMap","has","requestId","getRequestById","requestSub","getRequestListener","getDevicesByCompanyId","resetingForm","asyncValidators","otherIssue","whereAbout","messageTimer","setValue","userId","success","startTimer","error","addRequest","hash","k","markAllAsTouched","markAsTouched","onUpdatingRequest","onAddingRequest","onAddingUpdatingRequest","onSelectCompany","onChangeIssue","ClientDashboardMainComponent","userListener","getUserListener","ClientDashboardComponent","clientInfoService","numOfRequests","requestsPerPage","getRequestsByCustomerId","getClientRequestsStatics","staticInfoSub","getClientRequestsStaticsListener","staticInfo","numOfRequestsSub","getPaginationStaticsListener","ClientProfileComponent","_snackBar","clientAuth","disabled","getCustomerDetails","panelClass","updateCustomer","updateUserData","openSnackBar","action","onUpdate","editPhone","ClientLoginComponent","minLength","maxLength","onLogin","ClientMainComponent","ClientPhoneAuthComponent","ClientSignupComponent","phoneAuthService","isLinear","forms","phoneIsValid","verifyPassword","steper","getPhoneNumberAndCountryCode","countryCode","useValue","displayDefaultIndicatorType","isDone","checkPasswordMatch","onSingUp","ForgotPasswordComponent","forgotPasswordService","step","addForgotPasswordRequest","sendMessageAgain","verifyRequest","confirmPassword","changePassword","MainPageComponent","show","element","scrollIntoView","behavior","block","inline","video","document","getElementById","isInView","muted","currentTime","animate","volume","smoothScrolling","showContactInfo","ClientAuthService","ClientInfoService","requestsStaticsListener","paginationStaticsListener","requestsStatics","newName","numOfDoneRequests","patch","ClassDirectiveDirective","elementOffsetTop","offsetTop","window","pageYOffset","nativeElement","classList","add","myClassToAdd","remove","ErrorInterceptor","errorMsg","openDialogs","CitiesService","citiesListener","CompaniesService","companiesListener","CustomersService","customersListener","page","pagesize","queryParams","indexOf","splice","DevicesService","devicesListener","companyId","ForgotPasswordService","forgotPasswordId","IssuesService","issuesListener","RequestsService","requestsListener","requestListener","customerId","updateOp","newArray","SMSService","Customer","Device","BootstrapDialogComponent","DialogMessageComponent","close","cancel","EditCustomerDialogComponent","EditPhoneDialogComponent","clientService","onChangePhoneNumber","InputErrorComponent","isScrolledIntoView","elem","docViewTop","scrollTop","docViewBottom","elemTop","offset","top","elemBottom","fadeIn","NormalInputErrorComponent","PhoneAuthComponent","phoneService","authError","authSuccess","numberOfDigits","numberArr","setUpForms","isVerifiedSub","getIsVierifiedListener","isVerified","formNumberVerify","focus","nav","emit","formNumberValidate","controler","setSelectionRange","parent","getPhoneAuthId","verifyPhone","isResend","sendSMS","BASE_URL","PhoneAuthService","isVerifiedListener","phoneAuthId","authPhoneNumber","authCountryCode","statusHandler","color","selectInput","nameCheck","textCheck","matchPassword","passwordControl","verifyControl","flag","minlength","requiredLength","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent implements OnInit {\n  isFormInvalid: boolean\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  addCustomer(form: NgForm) {\n    if (form.invalid) {\n      this.isFormInvalid = true\n      return\n    }\n    this.isFormInvalid = false\n\n  }\n\n\n  checkPhoneNumber(form: NgForm, event) {\n\n    const phone = form.controls[event.target.name]\n\n    console.log(phone);\n\n\n    if (!phone) {\n      return\n    }\n\n    var isnum = /^\\d+$/.test(phone.value);\n\n    if (!isnum)\n      phone.setErrors({\n        ...phone.errors,\n        phoneNumber: true\n      })\n  }\n\n\n}\n","<form #addCustomerForm=\"ngForm\" (submit)=\"addCustomer(addCustomerForm)\">\n\n  <mat-card>\n\n    <mat-card-title>\n      <h1>Customer info</h1>\n    </mat-card-title>\n\n\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>First Name</mat-label>\n      <input matInput placeholder=\"my name\" type=\"text\" name=\"firstName\" ngModel minlength=\"2\" maxlength=\"24\" required\n        #firstNameInput=\"ngModel\">\n\n      <mat-error>\n        <app-input-error [controller]=\"firstNameInput\" [errors]=\"firstNameInput.errors\"></app-input-error>\n      </mat-error>\n\n    </mat-form-field>\n\n\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Last Name</mat-label>\n      <input matInput placeholder=\"my name\" type=\"text\" name=\"lastName\" ngModel minlength=\"2\" maxlength=\"24\" required\n        #lastNameInput=\"ngModel\">\n\n      <mat-error>\n        <app-input-error [controller]=\"lastNameInput\" [errors]=\"lastNameInput.errors\"></app-input-error>\n      </mat-error>\n\n    </mat-form-field>\n\n\n\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>E-mail</mat-label>\n      <input matInput placeholder=\"example@gmail.com\" type=\"email\" name=\"email\" ngModel required email\n        #emailInput=\"ngModel\">\n      <mat-error>\n        <app-input-error [controller]=\"emailInput\" [errors]=\"emailInput.errors\"></app-input-error>\n      </mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Phone Number 1</mat-label>\n      <input matInput placeholder=\"052-0000000\" type=\"text\" name=\"phone1\" maxlength=\"24\" ngModel required\n        #phone1Input=\"ngModel\" (input)=\"checkPhoneNumber(addCustomerForm,$event)\">\n      <mat-error>\n        <app-input-error [controller]=\"phone1Input\" [errors]=\"phone1Input.errors\"></app-input-error>\n      </mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Phone Number 2</mat-label>\n      <input matInput placeholder=\"052-0000000\" type=\"text\" name=\"phone2\" maxlength=\"24\" ngModel\n        #phone2Input=\"ngModel\" (input)=\"checkPhoneNumber(addCustomerForm,$event)\">\n      <mat-error>\n        <app-input-error [controller]=\"phone2Input\" [errors]=\"phone2Input.errors\"></app-input-error>\n      </mat-error>\n    </mat-form-field>\n\n\n    <mat-card-actions>\n      <button mat-raised-button color=\"accent\">Add Customer</button>\n\n    </mat-card-actions>\n\n\n    <mat-card-footer color=\"red\" class=\"mat-body-2\" *ngIf=\"isFormInvalid\">\n      * Fullfill the required requests\n    </mat-card-footer>\n\n  </mat-card>\n\n\n\n\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { RepairService } from '../services/repair.service';\nimport { Device } from '../../models/Device';\nimport { NgForm } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\n\n@Component({\n  selector: 'app-add-device',\n  templateUrl: './add-device.component.html',\n  styleUrls: ['./add-device.component.css']\n})\nexport class AddDeviceComponent implements OnInit {\n  companies: { _id: string, name: string }[]\n  devicesModel: Device[]\n  viewNames={}\n\n\n  constructor(private repairService: RepairService, @Inject(MAT_DIALOG_DATA) public data: { callback: Function }) { }\n\n  ngOnInit(): void {\n    this.getCompanies()\n  }\n\n\n  onSelected(event) {\n    console.log(event);\n    this.viewNames[event.source.ngControl.name] = event.source.triggerValue\n    if (event.source.ngControl.name==='company')\n      this.repairService.getDeviceModelByCompanyID(event.value).subscribe(devices => {\n        this.devicesModel = devices.devices\n      })\n\n  }\n\n\n\n\n  getCompanies() {\n    this.repairService.getDeviceCompanies().subscribe(res => {\n      console.log(res.message);\n      this.companies = res.companies\n    })\n  }\n\n  onAddingDevice(form: NgForm) {\n    if (form.invalid)\n      return\n\n\n\n    const device = {\n      device: form.value.device,\n      notes: form.value.notes,\n      price: form.value.price\n    }\n    this.data.callback(device,this.viewNames)\n  }\n}\n","<form #form=\"ngForm\" (submit)=\"onAddingDevice(form)\">\n\n\n    <div class=\"center\">\n      <mat-card-title>\n        <h1>Add New Repair</h1>\n      </mat-card-title>\n\n\n\n\n      <mat-form-field appearance=\"fill\" >\n        <mat-label>Select Device Company</mat-label>\n        <mat-select (selectionChange)=\"onSelected($event)\" required ngModel name=\"company\" #companySelect=\"ngModel\">\n          <mat-option [value]=\"comp._id\"   *ngFor=\"let comp of companies\">{{comp.name}}</mat-option>\n        </mat-select>\n\n        <mat-error>\n          <app-input-error [controller]=\"companySelect\" [errors]=\"companySelect.errors\"></app-input-error>\n        </mat-error>\n      </mat-form-field>\n\n\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Select Device Model</mat-label>\n        <mat-select (selectionChange)=\"onSelected($event)\" required ngModel name=\"device\" #deviceSelect=\"ngModel\">\n          <mat-option [value]=\"md._id\" *ngFor=\"let md of devicesModel\">{{md.model}}</mat-option>\n        </mat-select>\n        <mat-error>\n          <app-input-error [controller]=\"deviceSelect\" [errors]=\"deviceSelect.errors\"></app-input-error>\n        </mat-error>\n      </mat-form-field>\n\n\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Notes</mat-label>\n        <textarea matInput\n        placeholder=\"Add notes\"\n        rows=\"10\"\n        ngModel\n        name=\"notes\"></textarea>\n      </mat-form-field>\n\n\n\n\n\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Price</mat-label>\n        <input matInput placeholder=\"\" type=\"number\"  name=\"price\" ngModel required\n          #priceInput=\"ngModel\">\n        <mat-error>\n          <app-input-error [controller]=\"priceInput\" [errors]=\"priceInput.errors\"></app-input-error>\n        </mat-error>\n      </mat-form-field>\n\n\n\n\n\n\n      <mat-card-actions>\n        <button mat-raised-button  color=\"accent\">Add</button>\n\n      </mat-card-actions>\n\n\n      <mat-card-footer color=\"red\" class=\"mat-body-2\">\n        * Fullfill the required requests\n      </mat-card-footer>\n    </div>\n\n\n\n\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.autoAuthUser()\n\n  }\n\n}\n","<app-header></app-header>\n<div>\n  <main>\n    <router-outlet></router-outlet>\n\n  </main>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-vertical-bars',\n  templateUrl: './vertical-bars.component.html',\n  styleUrls: ['./vertical-bars.component.css']\n})\nexport class VerticalBarsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>vertical-bars works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { CustomersService } from 'src/app/globalServices/customers.service';\nimport { Customer } from 'src/app/models/Customer';\nimport { Subscription } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogMessageComponent } from 'src/app/utils-components/dialog-message/dialog-message.component';\nimport { NgForm, FormGroup, FormControl } from '@angular/forms';\nimport { EditCustomerDialogComponent } from 'src/app/utils-components/edit-customer-dialog/edit-customer-dialog.component';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n  page1 = 1\n  page2 = null\n  page3 = null\n\n  form: FormGroup\n  currentPage = 1\n  pageSize = 10\n  pagesNeeded: number\n  totalCustomers = 0\n\n  customers: Customer[]\n  customersSub: Subscription\n  editCustomerId: string\n\n  isLoading = false\n\n  constructor(private customerService: CustomersService, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      'search': new FormControl(null)\n    })\n\n    this.isLoading = true\n    this.customerService.getCustomers(null, this.currentPage, this.pageSize)\n    this.customersSub = this.customerService.getCustomersListener().subscribe(res => {\n      console.log(res);\n\n      this.customers = res.customers\n      this.totalCustomers = res.totalCustomers\n      this.calPagesNeeded()\n\n      this.page1 = this.currentPage\n\n\n        if (this.currentPage + 1 <= this.pagesNeeded)\n          this.page2 = this.currentPage + 1\n        else\n          this.page2 = null\n\n\n        if (this.currentPage + 2 <= this.pagesNeeded)\n          this.page3 = this.currentPage + 2\n        else\n          this.page3 = null\n\n\n      this.isLoading = false\n    })\n  }\n\n\n  prevPage() {\n    this.isLoading = true\n    this.currentPage = this.currentPage - 1\n    this.customerService.getCustomers(this.form.value.search, this.currentPage, this.pageSize)\n  }\n\n  nextPage() {\n    this.isLoading = true\n    this.currentPage = this.currentPage + 1\n    this.customerService.getCustomers(this.form.value.search, this.currentPage, this.pageSize)\n  }\n\n  calPagesNeeded() {\n    let pages = Math.round(this.totalCustomers / this.pageSize)\n    console.log(this.totalCustomers, this.pageSize, pages);\n    this.pagesNeeded = pages\n  }\n\n\n  onDeleteCustomer(customer: Customer) {\n\n    const confirm = () => {\n      this.customerService.deleteCustomer(customer)\n      this.dialog.closeAll()\n    }\n\n    this.dialog.open(DialogMessageComponent, {\n      data: {\n        buttons: true, title: 'حذف زبون',\n        message: ' ?' + ' هل أنت متأكد من حذف الزبون ' + customer.firstName + ' ' + customer.lastName, confirm\n      }\n    })\n  }\n\n\n\n  onGetingCustomers() {\n    this.isLoading = true\n    this.currentPage = 1\n    this.customerService.getCustomers(this.form.value.search, this.currentPage, this.pageSize)\n  }\n\n\n  editCustomer(customer: Customer) {\n    const dialogRef = this.dialog.open(EditCustomerDialogComponent, { data: { customer } })\n  }\n\n\n  onUpdatingCustomer(form: NgForm) {\n    console.log(form);\n  }\n\n  onPage(num: number) {\n    this.isLoading = true\n    this.currentPage = num\n    this.customerService.getCustomers(this.form.value.search, this.currentPage, this.pageSize)\n  }\n}\n","<div class=\"main-container\">\n\n\n\n  <header class=\"dash-board-header\">\n    <h1>الزبائن</h1>\n  </header>\n\n\n\n  <div class=\"cards-container\">\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>جميع الزبائن</h3>\n      </div>\n\n\n      <div class=\"search-box\">\n\n        <form [formGroup]=\"form\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>الاسم الكامل / رقم الهاتف</mat-label>\n            <input formControlName=\"search\" matInput (input)=\"onGetingCustomers()\">\n          </mat-form-field>\n        </form>\n\n        <button class=\"btn btn-success\" (click)=\"onGetingCustomers()\">بحث</button>\n      </div>\n\n\n      <div *ngIf=\"isLoading\" class=\"center-container\">\n        <div class=\"spinner-border text-success\" role=\"status\">\n          <span class=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n\n      <div *ngIf=\"!isLoading\">\n\n\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">الاسم الكامل</th>\n              <th scope=\"col\">البلدة</th>\n              <th scope=\"col\">رقم الهاتف</th>\n              <th scope=\"col\">طلبات</th>\n              <th scope=\"col\">طلبات تمت</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n\n\n          <div *ngIf=\"!customers || customers.length==0\" class=\"center-container\">\n            <p>لا يوجد زبائن </p>\n          </div>\n\n\n\n          <tbody>\n            <tr *ngFor=\"let customer of customers; let i=index\">\n              <th scope=\"row\">{{i+1}}</th>\n\n              <td>\n                <span>{{customer.firstName}} {{customer.lastName}}</span>\n              </td>\n\n              <td>\n                <span>{{customer.city.name}}</span>\n              </td>\n\n              <td>{{customer.phone}}</td>\n              <td>{{customer.numOfRequests}}</td>\n              <td>{{customer.numOfDoneRequests}}</td>\n              <td>\n                <div class=\"action-buttons\">\n                  <button class=\"btn btn-danger\" (click)=\"onDeleteCustomer(customer)\"> حذف</button>\n                  <button class=\"btn btn-success\" (click)=\"editCustomer(customer)\">تعديل</button>\n                </div>\n              </td>\n\n            </tr>\n\n          </tbody>\n        </table>\n\n\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination justify-content-center\">\n          <li [ngClass]=\"{'page-item disabled': currentPage==1 }\">\n            <a class=\"page-link\" (click)=\"prevPage()\">السابق</a>\n          </li>\n\n          <li class=\"page-item active\"><a class=\"page-link\" (click)=\"onPage(page1)\">{{page1}}</a></li>\n          <li class=\"page-item\"><a class=\"page-link\" *ngIf=\"page2\" (click)=\"onPage(page2)\">{{page2}}</a></li>\n          <li class=\"page-item\"><a class=\"page-link\" *ngIf=\"page3\" (click)=\"onPage(page3)\">{{page3}}</a></li>\n\n          <li class=\"page-item\" [ngClass]=\"{'page-item disabled':  !page2?true:false}\">\n            <a class=\"page-link\" (click)=\"nextPage()\">التالي</a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n\n  </div>\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { StaticsService } from '../statics.service';\nimport { Subscription } from 'rxjs';\nimport { Analytics } from 'src/app/models/Analytics';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  multi: any[];\n\n  // options\n  legend: boolean = true;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'יום';\n  yAxisLabel: string = 'כמות';\n  timeline: boolean = true;\n\n\n  single: any[];\n  numOfSub: Subscription\n\n  staticsRecord: Analytics[] = []\n  staticsRecordSub: Subscription\n\n\n  showLegened = true\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n  cardColor: string = '#232837';\n\n  constructor(private staticsService: StaticsService) {\n  }\n\n  ngOnInit(): void {\n    this.staticsService.getAnalytics()\n    this.staticsService.getNumOf()\n\n    this.staticsRecordSub = this.staticsService.getAnalyticsListener().subscribe(res => {\n      console.log(res);\n\n      this.staticsRecord = res\n    })\n\n    this.numOfSub = this.staticsService.getNumOfListener().subscribe(res => {\n      this.single = res\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.numOfSub.unsubscribe()\n    this.staticsRecordSub.unsubscribe()\n  }\n\n}\n","<div class=\"main-container\">\n\n\n\n  <header class=\"dash-board-header\">\n    <h1>الرئيسة</h1>\n  </header>\n\n  <div class=\"cards-container\">\n\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>معلومات</h3>\n      </div>\n\n      <div class=\"card-content\">\n        <div class=\"chart\">\n          <ngx-charts-number-card [scheme]=\"colorScheme\" [results]=\"single\" [cardColor]=\"cardColor\">\n          </ngx-charts-number-card>\n        </div>\n      </div>\n    </div>\n\n\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>احصائيات</h3>\n      </div>\n\n      <div class=\"card-content\">\n        <div class=\"chart\">\n          <ngx-charts-line-chart  [scheme]=\"colorScheme\" [legend]=\"legend\"\n            [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\" [xAxis]=\"xAxis\" [yAxis]=\"yAxis\"\n            [xAxisLabel]=\"xAxisLabel\" [yAxisLabel]=\"yAxisLabel\"\n            [roundDomains]='true' [timeline]=\"timeline\" [results]=\"staticsRecord\"  legendTitle=\"מידע\">\n          </ngx-charts-line-chart>\n        </div>\n      </div>\n    </div>\n\n\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>احصائيات</h3>\n      </div>\n\n      <div class=\"card-content\">\n        <div class=\"chart\">\n          <ngx-charts-pie-grid  [scheme]=\"colorScheme\" [results]=\"single\">\n          </ngx-charts-pie-grid>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CitiesService } from 'src/app/globalServices/cities.service';\nimport { IssuesService } from 'src/app/globalServices/issues.service';\nimport { CompaniesService } from 'src/app/globalServices/companies.service';\nimport { DevicesService } from 'src/app/globalServices/devices.service';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.css'],\n  providers:[DevicesService,CompaniesService,IssuesService,CitiesService]\n})\nexport class InfoComponent implements OnInit {\n  minDate: Date;\n  maxDate: Date;\n\n  cities\n  private citiesSub: Subscription\n  companies\n  private companiesSub: Subscription\n  devices\n  private deviceSub: Subscription\n  issues\n  private issuesSub: Subscription\n\n  isLoading = false\n\n\n  constructor(private cityService: CitiesService, private issueService: IssuesService, private comapnyService: CompaniesService,\n    private deviceService: DevicesService) { }\n\n  ngOnInit(): void {\n    this.maxDate = new Date();\n    this.minDate=new Date('2005')\n\n    this.cityService.getCites()\n    this.citiesSub = this.cityService.getCitiesListener().subscribe(cities => {\n      this.cities = cities\n    })\n\n    this.comapnyService.getCompanies()\n    this.companiesSub = this.comapnyService.getCompaniesListener().subscribe(companies => {\n      this.companies = companies\n      this.devices = null\n    })\n\n    this.issueService.getIssues()\n    this.issuesSub = this.issueService.getIssuesListener().subscribe(issues => {\n      this.issues = issues\n    })\n\n\n    this.deviceService.getDevices()\n    this.deviceSub = this.deviceService.getDevicesListener().subscribe(devices => {\n      this.devices = devices\n    })\n  }\n\n\n  onAddingCity(form: NgForm) {\n    const city = form.value.city\n    this.cityService.addCity(city).subscribe(res => {\n      console.log(res);\n      this.cityService.getCites()\n    })\n  }\n\n\n  onAddingIssue(form: NgForm) {\n    const issue = form.value.issue\n    this.issueService.addIssue(issue).subscribe(res => {\n      console.log(res);\n      this.issueService.getIssues()\n    })\n  }\n\n\n  onAddingCompany(form: NgForm) {\n    console.log(form);\n\n    const company = form.value.company\n    this.comapnyService.addCompany(company).subscribe(res => {\n      console.log(res);\n      this.comapnyService.getCompanies()\n    })\n  }\n\n\n  onAddingDevice(form: NgForm) {\n    const {company,released,model}=form.value\n    this.deviceService.addDevice(model,released,company).subscribe(res=>{\n      console.log(res);\n      this.deviceService.getDevices()\n    })\n  }\n\n\n  ngOnDestroy(): void {\n    this.citiesSub?.unsubscribe()\n    this.companiesSub?.unsubscribe()\n    this.deviceSub?.unsubscribe()\n    this.issuesSub?.unsubscribe()\n  }\n\n}\n","<div class=\"main-container\">\n\n\n\n  <header class=\"dash-board-header\">\n    <h1>معلومات</h1>\n  </header>\n\n\n\n  <div class=\"cards-container\">\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>اضافة مدينة</h3>\n      </div>\n\n      <div class=\"card-content\">\n\n\n\n        <div *ngIf=\"isLoading\" class=\"center-container\">\n          <div class=\"spinner-border text-success\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n\n\n\n\n        <form #cityForm=\"ngForm\" (submit)=\"onAddingCity(cityForm)\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>اسم الدينة</mat-label>\n            <input name=\"city\" ngModel matInput>\n          </mat-form-field>\n\n\n\n          <button class=\"btn btn-success\">أضف</button>\n\n\n\n\n\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Select</mat-label>\n            <mat-select>\n              <mat-option *ngFor=\"let city of cities\" [value]=\"city._id\">{{city.name}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n\n        </form>\n\n\n      </div>\n\n\n\n\n    </div>\n\n\n\n\n\n\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>اضافة مشكلة</h3>\n      </div>\n\n      <div class=\"card-content\">\n\n\n\n        <div *ngIf=\"isLoading\" class=\"center-container\">\n          <div class=\"spinner-border text-success\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n\n        <form #issueForm=\"ngForm\" (submit)=\"onAddingIssue(issueForm)\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>عنوان المشكلة</mat-label>\n            <input name=\"issue\" ngModel matInput>\n          </mat-form-field>\n\n\n\n          <button class=\"btn btn-success\">أضف</button>\n\n\n\n\n\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Select</mat-label>\n            <mat-select>\n              <mat-option *ngFor=\"let issue of issues\" [value]=\"issue._id\">{{issue.name}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n\n        </form>\n      </div>\n    </div>\n\n\n\n\n\n\n\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>اضافة شركة</h3>\n      </div>\n\n\n      <div class=\"card-content\">\n\n\n        <div *ngIf=\"isLoading\" class=\"center-container\">\n          <div class=\"spinner-border text-success\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n\n        <form #companyForm=\"ngForm\" (submit)=\"onAddingCompany(companyForm)\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>اسم الشركة</mat-label>\n            <input name=\"company\" ngModel matInput>\n          </mat-form-field>\n\n\n\n          <button class=\"btn btn-success\">أضف</button>\n\n\n\n\n\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Select</mat-label>\n            <mat-select>\n              <mat-option *ngFor=\"let company of companies\" [value]=\"company._id\">{{company.name}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n\n        </form>\n      </div>\n    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>اضافة جهاز</h3>\n      </div>\n\n      <div class=\"card-content\">\n\n\n\n        <div *ngIf=\"isLoading\" class=\"center-container\">\n          <div class=\"spinner-border text-success\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n\n        <form #deviceForm=\"ngForm\" (submit)=\"onAddingDevice(deviceForm)\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>اسم الجهاز</mat-label>\n            <input name=\"model\" ngModel matInput>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>Choose a date</mat-label>\n            <input name=\"released\" ngModel matInput [matDatepicker]=\"picker\" [min]=\"minDate\" [max]=\"maxDate\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n\n\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Select</mat-label>\n            <mat-select ngModel name=\"company\">\n              <mat-option *ngFor=\"let company of companies\" [value]=\"company._id\">{{company.name}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n\n          <button class=\"btn btn-success\">أضف</button>\n\n\n\n\n\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Select</mat-label>\n            <mat-select>\n              <mat-option *ngFor=\"let device of devices\" [value]=\"device._id\">{{device.model}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n\n        </form>\n      </div>\n\n    </div>\n\n\n  </div>\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogMessageComponent } from 'src/app/utils-components/dialog-message/dialog-message.component';\n\n@Component({\n  selector: 'app-main-dashboard',\n  templateUrl: './main-dashboard.component.html',\n  styleUrls: ['./main-dashboard.component.css']\n})\nexport class MainDashboardComponent implements OnInit {\n  user\n  isCollapsed = false;\n\n  constructor(private authService: AuthService, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.user = this.authService.getUser()\n  }\n\n  onLogOut() {\n    const ref = this.dialog.open(DialogMessageComponent, { data: { buttons: true ,title:'יצאה מהמערכת',message:'אתה בטוח לצאת מהמערכת ?'} })\n\n    ref.afterClosed().subscribe(res => {\n      if (res)\n        this.authService.logout()\n    })\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n\n  <div class=\"nav-header\">\n    <a class=\"navbar-brand\" href=\"#\">Smart Phone</a>\n\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n      aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  </div>\n\n\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div class=\"navbar-nav\">\n      <a routerLink=\"/admin\" class=\"nav-item nav-link\" [routerLinkActiveOptions]=\"{ exact: true }\"\n        routerLinkActive=\"active\">\n        <li>ראשי</li>\n      </a>\n      <a routerLink=\"sms\" class=\"nav-item nav-link\" routerLinkActive=\"active\">\n        <li>הודעות</li>\n      </a>\n      <a routerLink=\"info\" class=\"nav-item nav-link\" routerLinkActive=\"active\">\n        <li>מידע</li>\n      </a>\n      <a routerLink=\"customers\" class=\"nav-item nav-link\" routerLinkActive=\"active\">\n        <li>לקוחות</li>\n      </a>\n      <a routerLink=\"/admin/requests\" class=\"nav-item nav-link\" routerLinkActive=\"active\">\n        <li>בקשות</li>\n      </a>\n\n\n\n    </div>\n  </div>\n</nav>\n\n<div class=\"dashborad-container\">\n\n\n\n\n  <div class=\"side-nav\">\n    <div class=\"nav-inner\">\n      <div class=\"brand\">\n        <img src=\"../../../assets/img/logo-no-title.png\" alt=\"\">\n        <h1>Smart Phone</h1>\n      </div>\n\n\n      <div class=\"user\">\n        <h3>שלום , <b>{{user?.firstName}} {{user?.lastName}}</b></h3>\n      </div>\n\n\n      <ul>\n        <a routerLink=\"/admin\" [routerLinkActiveOptions]=\"{ exact: true }\" routerLinkActive=\"active-link\">\n          <li>ראשי</li>\n        </a>\n        <a routerLink=\"sms\" routerLinkActive=\"active-link\">\n          <li>הודעות</li>\n        </a>\n        <a routerLink=\"info\" routerLinkActive=\"active-link\">\n          <li>מידע</li>\n        </a>\n        <a routerLink=\"customers\" routerLinkActive=\"active-link\">\n          <li>לקוחות</li>\n        </a>\n        <a routerLink=\"/admin/requests\" routerLinkActive=\"active-link\">\n          <li>בקשות</li>\n        </a>\n        <!-- <li>client web</li>\n        <li>Products</li> -->\n      </ul>\n\n      <div class=\"divider-vertical\"></div>\n\n\n      <div class=\"logout\">\n        <h4 (click)=\"onLogOut()\">צא ,</h4>\n\n      </div>\n    </div>\n\n  </div>\n\n\n  <div class=\"side-content\">\n\n    <router-outlet></router-outlet>\n\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { RequestsService } from 'src/app/globalServices/requests.service';\nimport { Subscription } from 'rxjs';\nimport * as moment from 'moment';\nimport * as momentTimezone from 'moment-timezone';\nimport { StaticsService } from '../statics.service';\nimport { PageEvent } from '@angular/material/paginator';\nimport { statusHandler } from '../../../utils-components/statusHandler'\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogMessageComponent } from 'src/app/utils-components/dialog-message/dialog-message.component';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSelectChange } from '@angular/material/select';\n\n@Component({\n  selector: 'app-requests-list',\n  templateUrl: './requests-list.component.html',\n  styleUrls: ['./requests-list.component.css'],\n  providers: [RequestsService]\n})\nexport class RequestsListComponent implements OnInit {\n\n  requests\n  private requestsSub: Subscription\n\n  private numOfSub: Subscription\n  totalRequests\n  pageSize = 10\n  currentPage = 1\n\n  isLoading = false\n  form: FormGroup\n\n\n  constructor(private requestService: RequestsService, private dialog: MatDialog, private staticsService: StaticsService) {\n    moment.locale('he')\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      'filter': new FormControl('all'),\n      'search': new FormControl()\n    })\n\n    this.isLoading = true\n    this.requestService.getRequests(this.currentPage, this.pageSize)\n    this.requestsSub = this.requestService.getRequestsListener().subscribe(req => {\n      this.requests = req.requests\n      this.totalRequests = req.max\n      this.isLoading = false\n    })\n  }\n\n\n  onChangeFilter(e: MatSelectChange) {\n    var filter = e.value\n\n    if (filter === 'all')\n      filter = null\n\n    this.form.updateValueAndValidity()\n    this.requestService.getRequests(this.currentPage, this.pageSize, filter)\n  }\n\n\n\n  onSearch() {\n    console.log(this.form);\n\n    var filter = this.form.value.filter\n    if (filter === 'all')\n      filter = null\n\n    this.requestService.getRequests(this.currentPage, this.pageSize, filter, this.form.value.search)\n  }\n\n\n\n\n  dateFormat(date: string) {\n    return moment(date).fromNow()\n  }\n\n  fullDateFormat(date: string) {\n    let timezoneDate = momentTimezone(date)\n    return timezoneDate.tz('Asia/hebron').format('LLLL')\n  }\n\n\n  onPageChange(pageData: PageEvent) {\n    this.isLoading = true\n    this.currentPage = pageData.pageIndex + 1\n    this.staticsService.getNumOf()\n    this.requestService.getRequests(this.currentPage, this.pageSize)\n  }\n\n\n\n  onDeletingRequest(request) {\n    const confirm = () => {\n      this.requestService.deleteRequest(request._id, () => {\n        this.staticsService.getNumOf()\n      })\n      this.dialog.closeAll()\n    }\n    this.dialog.open(DialogMessageComponent, { data: { buttons: true, title: 'حذف طلب', message: 'هل أنت متأكد من حذف الطلب ؟', confirm } })\n  }\n\n\n\n  onUpdatingStatus(request) {\n    const updateOps = [\n      { name: 'status', value: 'DONE' }\n    ]\n\n\n    const confirm = () => {\n      this.requestService.updateReuqest(request._id, updateOps).subscribe(res => {\n        request.status = 'DONE'\n      })\n      this.dialog.closeAll()\n    }\n\n    this.dialog.open(DialogMessageComponent, {\n      data: {\n        buttons: true, title: 'اتمام طلب',\n        message: 'هل أنت متأكد من اتمام الطلب ؟', confirm\n      }\n    })\n  }\n\n\n  statusHandler(status) {\n    return statusHandler(status)\n  }\n\n\n\n  ngOnDestroy(): void {\n    this.numOfSub?.unsubscribe()\n    this.requestsSub?.unsubscribe()\n  }\n}\n","<div class=\"main-container\">\n\n\n\n  <header class=\"dash-board-header\">\n    <h1>الرئيسة</h1>\n  </header>\n\n  <div class=\"cards-container\">\n\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>طلباتي</h3>\n      </div>\n\n      <form [formGroup]=\"form\" (submit)=\"onSearch()\">\n\n        <mat-form-field appearance=\"fill\" [hideRequiredMarker]=\"false\" [floatLabel]=\"true\">\n          <mat-label>خيارات</mat-label>\n\n          <mat-select formControlName=\"filter\" value=\"all\" (selectionChange)=\"onChangeFilter($event)\">\n            <mat-option value=\"all\">جميع الطلبات</mat-option>\n            <mat-option value=\"IN-PROGRESS\">قيد التنفيذ</mat-option>\n            <mat-option value=\"DONE\">تم</mat-option>\n            <mat-option value=\"CANCEL\">الغي</mat-option>\n          </mat-select>\n\n        </mat-form-field>\n\n\n\n        <div class=\"search-box\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>الاسم \\ رقم الهاتف</mat-label>\n            <input formControlName=\"search\" matInput>\n          </mat-form-field>\n\n          <button class=\"btn btn-success\">بحث</button>\n        </div>\n      </form>\n\n      <div *ngIf=\"requests && requests.length==0\" class=\"center-container\">\n        <p>لا يوجد طلبات </p>\n      </div>\n\n      <div *ngIf=\"isLoading\" class=\"center-container\">\n        <mat-spinner></mat-spinner>\n      </div>\n\n      <div *ngIf=\"!isLoading\">\n\n\n\n        <mat-accordion>\n          <mat-expansion-panel *ngFor=\"let request of requests\">\n\n            <mat-expansion-panel-header>\n\n              <div class=\"expansion-header\">\n\n                <div class=\"header\">\n                  <p>عنوان الطلب :</p>\n                  <p>{{request.title}}</p>\n                </div>\n\n                <div class=\"spacer\"></div>\n\n                <div class=\"status-box\">\n                  <div class=\"status\" [ngStyle]=\"statusHandler(request.status)\">\n                  </div>\n                  <div>\n                    <span *ngIf=\"request.status=='DONE'\">تم</span>\n                    <span *ngIf=\"request.status=='IN-PROGRESS'\">قيد التنفيذ</span>\n                    <span *ngIf=\"request.status=='CANCEL'\">تم الالغاء</span>\n                  </div>\n                </div>\n              </div>\n\n            </mat-expansion-panel-header>\n\n\n\n            <div class=\"panel-data\">\n\n              <div class=\"panel-info\">\n                <p>البلدة</p>\n                <p>{{request.city.name}}</p>\n              </div>\n\n              <div class=\"panel-info\">\n                <p>المشكلة</p>\n                <p>{{request.issue?.name}}</p>\n              </div>\n\n              <div *ngIf=\"request.otherIssue\" class=\"panel-info\">\n                <p>مشكلة اخرى</p>\n                <p>{{request.otherIssue}}</p>\n              </div>\n\n              <div class=\"panel-info\">\n                <p>نوع الجهاز</p>\n                <p>{{request.device.model}}</p>\n              </div>\n\n              <div class=\"panel-info\">\n                <p>الشركة</p>\n                <p>{{request.company.name}}</p>\n\n              </div>\n              <div class=\"panel-info\">\n                <p>مكان التواجد</p>\n                <p>{{request.whereAbout}}</p>\n              </div>\n            </div>\n\n            <div class=\"panel-date\">\n              <p>{{dateFormat(request.createdAt)}}</p>\n              <p>{{fullDateFormat(request.createdAt)}}</p>\n            </div>\n\n\n\n            <mat-action-row>\n              <a mat-raised-button color=\"primary\" (click)=\"onUpdatingStatus(request)\">تم</a>\n              <button mat-raised-button color=\"warn\" (click)=\"onDeletingRequest(request)\">حذف</button>\n\n            </mat-action-row>\n\n\n\n\n\n          </mat-expansion-panel>\n        </mat-accordion>\n\n\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <mat-paginator [length]=\"totalRequests\" [pageSize]=\"pageSize\" (page)=\"onPageChange($event)\">\n      </mat-paginator>\n    </div>\n\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { NgForm } from '@angular/forms';\nimport { SMSService } from 'src/app/globalServices/sms.service';\n\n@Component({\n  selector: 'app-sms',\n  templateUrl: './sms.component.html',\n  styleUrls: ['./sms.component.css']\n})\nexport class SmsComponent implements OnInit {\n  isLoading = false\n\n  constructor(private smsService: SMSService) { }\n\n  ngOnInit(): void {\n  }\n\n\n\n  onSendingMessage(form: NgForm) {\n    this.smsService.sendMessage(form.value.to, form.value.toAll, form.value.message)\n  }\n\n\n}\n","<div class=\"main-container\">\n\n\n\n  <header class=\"dash-board-header\">\n    <h1>SMS</h1>\n  </header>\n\n\n\n  <div class=\"cards-container\">\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>ارسال رسائل SMS</h3>\n      </div>\n\n\n      <div class=\"cart-content\">\n\n\n        <div *ngIf=\"isLoading\" class=\"center-container\">\n          <div class=\"spinner-border text-success\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n\n\n        <form #form=\"ngForm\" (submit)=\"onSendingMessage(form)\" *ngIf=\"!isLoading\">\n          <div class=\"input-container\">\n            <mat-checkbox name=\"toAll\" ngModel #sendToAll>ارسل الي جميع الزبائن</mat-checkbox>\n          </div>\n\n          <div *ngIf=\"!sendToAll?.checked\" class=\"input-container\">\n            <p>رقم الهانف</p>\n            <input name=\"to\" ngModel placeholder=\"052-0000000\" type=\"tel\">\n          </div>\n\n\n\n          <div class=\"input-container\">\n            <p>الرسالة</p>\n            <textarea name=\"message\" ngModel placeholder=\"Message here...\" rows=\"10\"></textarea>\n          </div>\n\n          <button>أرسل</button>\n        </form>\n\n\n\n        <div class=\"spacer\"></div>\n\n      </div>\n\n    </div>\n\n  </div>\n\n\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Subject } from 'rxjs';\nimport { NumOf } from 'src/app/models/NumOf';\nimport { Analytics } from 'src/app/models/Analytics';\n\nconst BACKEND = environment.apiUrl + \"analytics\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaticsService {\n  private numOf: NumOf[] = []\n  private numOfSub = new Subject<NumOf[]>()\n\n  private analytics: Analytics[] = []\n  private analyticsSub = new Subject<Analytics[]>()\n\n\n\n\n\n  constructor(private http: HttpClient) { }\n\n\n\n  getNumOf() {\n    this.http.get<[NumOf]>(BACKEND + '/numOf').subscribe(res => {\n      this.numOf = res\n      this.numOfSub.next([...this.numOf])\n    })\n  }\n\n  getNumOfListener() {\n    return this.numOfSub.asObservable()\n  }\n\n\n\n\n  getAnalytics() {\n    this.http.get<[Analytics]>(BACKEND).subscribe(res => {\n      this.analytics = res\n      this.analyticsSub.next([...this.analytics])\n    })\n  }\n\n  getAnalyticsListener() {\n    return this.analyticsSub.asObservable()\n  }\n\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n   isAuthenticated=false\n  private authStatusAuthSub: Subscription\n\n  constructor(private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.isAuthenticated=this.authService.getIsAuthenticated()\n    this.authService.getIsAuthenticatedListener().subscribe(status=>{\n      this.isAuthenticated=status\n    })\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.authStatusAuthSub?.unsubscribe()\n  }\n\n  onLogOut(){\n    this.authService.logout()\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n\n  <a class=\"brand\" routerLink=\"\">\n    <h1>Smart Phone</h1>\n  </a>\n\n  <div class=\"spacer\"></div>\n\n  <ul>\n    <div *ngIf=\"isAuthenticated\">\n      <a mat-button [routerLinkActiveOptions]=\"{ exact: true }\" routerLink=\"/admin\" routerLinkActive=\"mat-accent\">Home</a>\n      <a mat-button routerLink=\"addCustomer\" routerLinkActive=\"mat-accent\">Add Customer</a>\n      <a mat-button routerLink=\"addRepair\" routerLinkActive=\"mat-accent\">Add Repair</a>\n      <a mat-button routerLink=\"requests\" routerLinkActive=\"mat-accent\">Requests</a>\n      <a mat-button routerLink=\"createPost\" routerLinkActive=\"mat-accent\">Add Post</a>\n\n    </div>\n\n    <a *ngIf=\"!isAuthenticated\" mat-button routerLink=\"login\" routerLinkActive=\"mat-accent\">Login</a>\n    <!-- <a *ngIf=\"!isAuthenticated\" mat-button routerLink=\"signup\" routerLinkActive=\"mat-accent\">Signup</a> -->\n    <a *ngIf=\"isAuthenticated\" mat-button routerLink=\"login\" (click)=\"onLogOut()\">Logut</a>\n\n  </ul>\n\n\n</mat-toolbar>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CustomersService } from '../../globalServices/customers.service';\nimport { Customer } from '../../models/Customer';\nimport { NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-pick-customer',\n  templateUrl: './pick-customer.component.html',\n  styleUrls: ['./pick-customer.component.css']\n})\nexport class PickCustomerComponent implements OnInit {\n  customers: Customer[]\n  constructor(private cutomerService: CustomersService) { }\n\n  ngOnInit(): void {\n    this.cutomerService.getCustomers()\n  }\n\n\n\n\n  onSearch(event: NgModel) {\n    const ref=this.cutomerService.getCustomers(event.value)\n\n\n  }\n}\n","<div class=\"dialog-container\">\n  <mat-dialog-actions>\n    <p  color=\"primary\" mat-dialog-close>x</p>\n  </mat-dialog-actions>\n\n  <h1 mat-dialog-title>Pick Customer</h1>\n\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Search</mat-label>\n    <input matInput placeholder=\"search by name\" type=\"text\" name=\"search\" maxlength=\"24\" ngModel #search (input)=\"onSearch(search)\">\n\n  </mat-form-field>\n\n  <mat-card *ngFor=\"let customer of customers\" [mat-dialog-close]=\"customer\" >\n    <mat-card-title>\n      {{customer.firstName}} {{customer.lastName}}\n    </mat-card-title>\n  </mat-card>\n\n  <h4 class=\"mat-body-2\" *ngIf=\"customers==null || customers.length==0\">No Customers</h4>\n\n\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PickCustomerComponent } from 'src/app/admin-components/pick-customer/pick-customer.component';\nimport { Customer } from 'src/app/models/Customer';\nimport { RepairService } from 'src/app/admin-components/services/repair.service';\nimport { AddDeviceComponent } from 'src/app/admin-components/add-device/add-device.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-add-repair',\n  templateUrl: './add-repair.component.html',\n  styleUrls: ['./add-repair.component.css']\n})\nexport class AddRepairComponent implements OnInit {\n  customer: Customer\n  devices: {\n    company: string,\n    device: string,\n    notes: string,\n    price: number\n  }[] = []\n  isLoading=false\n  private loadingSub:Subscription\n\n  viewsName: { company: string, device: string }[] = []\n\n  constructor(private dilaog: MatDialog, private repairService: RepairService) { }\n\n  ngOnInit(): void {\n    this.loadingSub=this.repairService.getIsLoading().subscribe(res=>{\n      this.isLoading=res\n    })\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.loadingSub.unsubscribe()\n  }\n\n  pickCustomer() {\n    const ref = this.dilaog.open(PickCustomerComponent, {\n      width: '80%',\n      height: '90vh'\n    })\n\n    ref.afterClosed().subscribe(res => {\n      console.log(res);\n      this.customer = res\n    })\n  }\n\n\n  addDevice() {\n    const callback: Function = (device: {\n      company: string,\n      device: string,\n      notes: string,\n      price: number\n    }, viewNames) => {\n      console.log(device, viewNames);\n      this.dilaog.closeAll()\n      this.devices.push(device)\n      this.viewsName.push(viewNames)\n    }\n\n    const ref = this.dilaog.open(AddDeviceComponent, {\n      width: '80%',\n      height: '90vh',\n      data: { callback }\n    })\n  }\n\n\n  deleteDevice(index: number) {\n    console.log(index);\n    const newArr = this.devices.filter((dev, i) => {\n      return index !== i\n    })\n\n    const newViewsList = this.viewsName.filter((v, i) => {\n      return index !== i\n    })\n\n    this.viewsName = newViewsList\n    this.devices = newArr\n  }\n\n\n\n\n  onAddingRepair() {\n    if (this.devices.length == 0)\n      return\n\n    if (!this.customer)\n      return\n\n    const repair = {\n      customer: this.customer._id,\n      devices: this.devices\n    }\n\n    console.log(repair);\n\n    this.repairService.addRepair(repair)\n  }\n\n\n\n}\n","<mat-card>\n\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n\n  <div class=\"center\">\n    <mat-card-title>\n      <h1>Add New Repair</h1>\n    </mat-card-title>\n\n\n    <button mat-raised-button (click)=\"addDevice()\">Add Device +</button>\n\n    <div class=\"devices-container\">\n      <h3>Devices</h3>\n      <div class=\"card-container\">\n        <mat-card *ngFor=\"let v of viewsName  let i = index\">\n          <p (click)=\"deleteDevice(i)\">x</p>\n          <div class=\"card-content\">\n            <h4>{{v.company}}</h4>\n            <h5>{{v.device}}</h5>\n          </div>\n        </mat-card>\n      </div>\n\n    </div>\n\n\n\n\n\n    <button mat-raised-button (click)=\"pickCustomer()\">PICK CUSTOMER</button>\n    <mat-card-content class=\"mat-body-2\" *ngIf=\"customer\">\n      {{customer?.firstName}} {{customer?.lastName}}\n    </mat-card-content>\n\n\n\n    <div>\n      <mat-card-actions>\n        <button mat-raised-button (click)=\"onAddingRepair()\" color=\"accent\">Add Repair</button>\n\n      </mat-card-actions>\n\n\n      <mat-card-footer color=\"red\" class=\"mat-body-2\">\n        * Fullfill the required requests\n      </mat-card-footer>\n    </div>\n  </div>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-repair-details',\n  templateUrl: './repair-details.component.html',\n  styleUrls: ['./repair-details.component.css']\n})\nexport class RepairDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>repair-details works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Repair } from 'src/app/models/Repair';\nimport { RepairService } from '../../services/repair.service';\n\n@Component({\n  selector: 'app-repair-list',\n  templateUrl: './repair-list.component.html',\n  styleUrls: ['./repair-list.component.css']\n})\nexport class RepairListComponent implements OnInit {\n  repairs: Repair[]\n  pipe = new DatePipe('en-US'); // Use your own locale\n\n\n  constructor(private repairService: RepairService) { }\n\n  ngOnInit(): void {\n    this.repairs = this.repairService.getRepairs()\n  }\n\n}\n","<div class=\"repairs-container\">\n\n  <mat-card routerLink=\"details\" *ngFor=\"let repair of repairs\">\n      <div class=\"repair-state\">\n        <div class=\"status\" [ngStyle]=\"{ 'background': repair.status ? '#77D150'  : 'red'}\"></div>\n\n        <div>\n          <p class=\"mat-body-2\" *ngIf=\"repair.status != null && !repair.status\">IN PROGRESS</p>\n          <p class=\"mat-body-2\" *ngIf=\"repair.status\">DONE</p>\n          <p class=\"mat-body-2\" *ngIf=\"repair.status==null\">CANCELED</p>\n        </div>\n\n\n      </div>\n\n      <div class=\"pad\">\n\n      <mat-card-title class=\"mat-h2\">\n        {{repair.device.model}}\n      </mat-card-title>\n\n\n      <img src=\"https://www.espir.co.il/images/itempics/MQAG2HB-A.jpg\" alt=\"\">\n\n\n      <mat-card-footer class=\"mat-subheading-1\">\n        {{pipe.transform(repair.createdAt,'short')}}\n      </mat-card-footer>\n\n    </div>\n\n  </mat-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { User } from '../../models/User';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { AuthData } from '../interfaces/auth-data';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\nconst BACKEND_URL = environment.apiUrl + 'admin/'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private isAuthenticated = false\n  private isAuthenticatedListener = new Subject<boolean>()\n  private isLoading = false\n  private token: string\n  private tokenTimer: any\n  private user: { firstName: string, lastName: string, _id: string }\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  getIsAuthenticated() {\n    return this.isAuthenticated\n  }\n\n  getIsAuthenticatedListener() {\n    return this.isAuthenticatedListener\n  }\n\n  getIsLoading() {\n    return this.isLoading\n  }\n\n\n  getUser() {\n    return this.user\n  }\n\n  onSignUp(user: User, keepMelogedIn: boolean = false) {\n    this.isLoading = true\n    this.http.post<{ message: string, token: string, expiresIn: number, user: { firstName: string, lastName: string, _id: string } }>(BACKEND_URL + 'signup', user).subscribe(res => {\n      this.authMethod(res, keepMelogedIn)\n    })\n  }\n\n\n  login(username: string, password: string, keepMelogedIn: boolean = false) {\n    const authData: AuthData = { username, password }\n\n    this.isLoading = true\n    this.http.post<{ message: string, token: string, expiresIn: number, user: { firstName: string, lastName: string, _id: string } }>\n      (BACKEND_URL + 'login', authData).subscribe(res => {\n        this.authMethod(res, keepMelogedIn)\n      }, err => {\n        this.setAuthenticated(false)\n      })\n  }\n\n  private setAuthenticated(state) {\n    this.isAuthenticated = state\n    this.isAuthenticatedListener.next(state)\n    this.isLoading = false\n  }\n\n\n  private authMethod(res, keepMelogedIn: boolean = false) {\n    const token = res.token\n    this.token = token\n    if (token) {\n      this.token = token\n      this.setAuthenticated(true)\n\n      const user = res.user\n      const expiresInDuration = res.expiresIn\n\n      this.setAuthTimer(expiresInDuration)\n\n      if (keepMelogedIn) {\n        const now = new Date()\n        const expirationDate = new Date((now.getTime() + expiresInDuration * 1000))\n        this.saveAuthData(token, expirationDate, user)\n      }\n\n      this.router.navigate(['/admin'])\n    }\n  }\n\n\n  ///--- Summary ---////\n  /// Title : Loging out\n  /// Description :\n  /// Returning Args :\n  logout() {\n    this.setAuthenticated(false)\n    this.token = null\n    this.isAuthenticated = false\n    clearTimeout(this.tokenTimer)\n    this.clearAuthData()\n    this.user = null\n    this.router.navigate(['/admin/login'])\n  }\n\n\n\n\n\n  ///--- Summary ---////\n  /// Title : Auto authenticate the user\n  /// Description : Automatically authenticating the user\n  /// Returning Args :\n  autoAuthUser(navigateToDashBoard = false) {\n    const authInfo = this.getAuthData()\n\n\n    if (!authInfo) {\n      return\n    }\n    const now = new Date()\n    const expiresIn = authInfo.expirationDate.getTime() - now.getTime()\n    if (expiresIn > 0) {\n      this.token = authInfo.token\n      this.user = authInfo.user\n      this.setAuthTimer(expiresIn / 1000)\n      this.setAuthenticated(true)\n      this.token = authInfo.token\n\n      if (navigateToDashBoard) {\n        this.router.navigate(['/admin'])\n      }\n    }\n  }\n\n\n\n\n\n  ///--- Summary ---////\n  /// Title : Auth timer for token date\n  /// Description : updating the ui based on the token expire date\n  /// Returning Args :\n\n  private setAuthTimer(duration) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout()\n    }, duration * 1000)\n  }\n\n\n\n  getToken() {\n    return this.token\n  }\n\n\n  ///--- Summary ---////\n  /// Title : getting the authintecation data from local storage\n  /// Description :\n  /// Returning Args :\n\n  private getAuthData() {\n    const token = localStorage.getItem('admin-token')\n    const expirationDate = localStorage.getItem('admin-expirationDate')\n    const firstName = localStorage.getItem('admin-firstName')\n    const lastName = localStorage.getItem('admin-lastName')\n    const id = localStorage.getItem('admin-id')\n\n    if (!token || !expirationDate) {\n      return\n    }\n\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      user: {\n        firstName,\n        lastName,\n        _id: id\n      }\n    }\n  }\n\n\n\n\n\n  ///--- Summary ---////\n  /// Title : Saving to local storage\n  /// Description : saving the auth data to local storage\n  /// Returning Args :\n\n  saveAuthData(token: string, expirationDate: Date, user: { firstName: string, lastName: string, _id: string }) {\n    localStorage.setItem('admin-token', token)\n    localStorage.setItem('admin-expirationDate', expirationDate.toISOString())\n    localStorage.setItem('admin-firstName', user.firstName)\n    localStorage.setItem('admin-lastName', user.lastName)\n    localStorage.setItem('admin-id', user._id)\n  }\n\n\n\n  ///--- Summary ---////\n  /// Title : Clear auth data from local storage\n  /// Description : clearing the local storage\n  /// Returning Args :\n  private clearAuthData() {\n    localStorage.removeItem('admin-token')\n    localStorage.removeItem('admin-expirationDate')\n    localStorage.removeItem('admin-firstName')\n    localStorage.removeItem('admin-lastName')\n    localStorage.removeItem('admin-id')\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Repair } from '../../models/Repair';\nimport { Customer } from '../../models/Customer';\nimport { Device } from '../../models/Device';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\nconst BACKEND_URL=environment.apiUrl\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepairService {\n\n  isLoading =new Subject<boolean>()\n\n  constructor(private http: HttpClient , private router:Router) { }\n\n  getIsLoading(){\n    return this.isLoading.asObservable()\n  }\n\n\n  getRepairs(): Repair[] {\n    return [\n      {\n        _id: \"1\", notes: \"this device needs alot of things\", price: 500.5, problems: [\"1\", \"2\", \"3\"], createdAt: new Date(), status: true,\n        customer: new Customer(), device: new Device()\n      },\n      {\n        _id: \"2\", notes: \"this device needs alot of things\", price: 500.5, problems: [\"1\", \"2\", \"3\"], createdAt: new Date(), status: false,\n        customer: new Customer(), device: new Device()\n      },\n      {\n        _id: \"2\", notes: \"this device needs alot of things\", price: 500.5, problems: [\"1\", \"2\", \"3\"], createdAt: new Date(), status: false,\n        customer: new Customer(), device: new Device()\n      },\n      {\n        _id: \"2\", notes: \"this device needs alot of things\", price: 500.5, problems: [\"1\", \"2\", \"3\"], createdAt: new Date(), status: false,\n        customer: new Customer(), device: new Device()\n      }\n    ]\n  }\n\n  devicesModels = [{ _id: '1', model: \"iPhone X\" },\n  { _id: '2', model: \"Galaxy S20\" }]\n\n\n  getDeviceModelByCompanyID(id: string) {\n    return this.http.get<{ message: string, devices: Device[] }>(BACKEND_URL + 'devices/' + id)\n  }\n\n  getDeviceCompanies() {\n    return this.http.get<{ message: string, companies: { name: string, _id: string }[] }>(BACKEND_URL + \"companies\")\n  }\n\n\n\n\n  addRepair(repair: {\n    customer: string, devices: {\n      company: string,\n      device: string,\n      notes: string,\n      price: number\n    }[]\n  }) {\n\n    this.isLoading.next(true)\n    this.http.post(BACKEND_URL+ 'repairs', repair).subscribe(data => {\n      console.log(data);\n      this.isLoading.next(false)\n      this.router.navigate(['/admin'])\n    })\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RepairListComponent } from './admin-components/repair/repair-list/repair-list.component';\nimport { AddRepairComponent } from './admin-components/repair/add-repair/add-repair.component';\nimport { AddCustomerComponent } from './admin-components/add-customer/add-customer.component';\nimport { RepairDetailsComponent } from './admin-components/repair/repair-details/repair-details.component';\nimport { AdminComponent } from './admin-components/admin/admin.component';\nimport { MainPageComponent } from './client/main-page/main-page.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { DashboardComponent } from './admin-components/dashboard/dashboard/dashboard.component';\nimport { MainDashboardComponent } from './admin-components/dashboard/main-dashboard/main-dashboard.component';\nimport { SmsComponent } from './admin-components/dashboard/sms/sms.component';\nimport { ClientMainComponent } from './client/client-main/client-main.component';\nimport { ClientAuthGuard } from './client/client-auth.guard';\nimport { ClientDashboardComponent } from './client/client-dashboard-main/client-dashboard/client-dashboard.component';\nimport { ClientLoginComponent } from './client/client-login/client-login.component';\nimport { ClientSignupComponent } from './client/client-signup/client-signup.component';\nimport { ClientAuthService } from './client/services/client-auth.service';\nimport { ClientProfileComponent } from './client/client-dashboard-main/client-profile/client-profile.component';\nimport { ClientAddRequestComponent } from './client/client-dashboard-main/client-add-request/client-add-request.component';\nimport { ClientDashboardMainComponent } from './client/client-dashboard-main/client-dashboard-main.component';\nimport { CustomersComponent } from './admin-components/dashboard/customers/customers.component';\nimport { RequestsListComponent } from './admin-components/dashboard/requests-list/requests-list.component';\nimport { InfoComponent } from './admin-components/dashboard/info/info.component';\nimport { ForgotPasswordComponent } from './client/forgot-password/forgot-password.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'admin', children: [\n      {\n        path: '', canActivate: [AuthGuard], component: MainDashboardComponent, children: [\n          { path: '', pathMatch: 'full', component: DashboardComponent, canActivate: [AuthGuard] },\n          { path: 'sms', component: SmsComponent, canActivate: [AuthGuard] },\n          { path: 'customers', component: CustomersComponent, canActivate: [AuthGuard] },\n          { path: 'requests', component: RequestsListComponent, canActivate: [AuthGuard] },\n          { path: 'info', component: InfoComponent, canActivate: [AuthGuard] },\n\n        ]\n      },\n      { path: 'login', pathMatch: 'full', component: LoginComponent }\n    ]\n  },\n  { path: '', component: MainPageComponent },\n  {\n    path: 'client', component: ClientMainComponent, children: [\n      {\n        path: '', component: ClientDashboardMainComponent, children: [\n          { path: '', pathMatch: 'full', component: ClientDashboardComponent, canActivate: [ClientAuthGuard] },\n          { path: 'profile', component: ClientProfileComponent, canActivate: [ClientAuthGuard] },\n          { path: 'addRequest', component: ClientAddRequestComponent, canActivate: [ClientAuthGuard] },\n          { path: 'editRequest/:requestId', component: ClientAddRequestComponent, canActivate: [ClientAuthGuard] },\n        ]\n      },\n      { path: 'signup', component: ClientSignupComponent },\n      { path: 'login', component: ClientLoginComponent },\n      { path: 'forgotPassword', component: ForgotPasswordComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard, ClientAuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n\n})\nexport class AppComponent {\n  constructor(){\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RepairListComponent } from './admin-components/repair/repair-list/repair-list.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { HeaderComponent } from './admin-components/header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { MatRadioModule } from '@angular/material/radio'\nimport { MatDividerModule } from '@angular/material/divider'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatChipsModule } from '@angular/material/chips'\nimport { MatExpansionModule } from '@angular/material/expansion'\nimport { MatPaginatorModule } from '@angular/material/paginator'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\n\nimport { RepairDetailsComponent } from './admin-components/repair/repair-details/repair-details.component';\nimport { AdminComponent } from './admin-components/admin/admin.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AddCustomerComponent } from './admin-components/add-customer/add-customer.component';\nimport { InputErrorComponent } from './utils-components/input-error/input-error.component';\nimport { AddRepairComponent } from './admin-components/repair/add-repair/add-repair.component';\nimport { DialogMessageComponent } from './utils-components/dialog-message/dialog-message.component';\nimport { PickCustomerComponent } from './admin-components/pick-customer/pick-customer.component';\nimport { AddDeviceComponent } from './admin-components/add-device/add-device.component';\nimport { MainPageComponent } from './client/main-page/main-page.component'\nimport { AuthInterceptor } from './auth/auth-interceptor';\n\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { environment } from 'src/environments/environment';\nimport { DashboardComponent } from './admin-components/dashboard/dashboard/dashboard.component';\nimport { VerticalBarsComponent } from './admin-components/dashboard/charts/vertical-bars/vertical-bars.component';\nimport { MainDashboardComponent } from './admin-components/dashboard/main-dashboard/main-dashboard.component';\nimport { SmsComponent } from './admin-components/dashboard/sms/sms.component';\nimport { PhoneAuthComponent } from './utils-components/phone-auth/phone-auth.component';\nimport { ClientMainComponent } from './client/client-main/client-main.component';\nimport { ClientPhoneAuthComponent } from './client/client-phone-auth/client-phone-auth.component';\nimport { NormalInputErrorComponent } from './utils-components/normal-input-error/normal-input-error.component';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { PhoneAuthService } from './utils-components/phone-auth/phone-auth.service';\nimport { ClientDashboardComponent } from './client/client-dashboard-main/client-dashboard/client-dashboard.component';\nimport { ClientLoginComponent } from './client/client-login/client-login.component';\nimport { ClientSignupComponent } from './client/client-signup/client-signup.component';\nimport { ClientAuthService } from './client/services/client-auth.service';\nimport { ClientAddRequestComponent } from './client/client-dashboard-main/client-add-request/client-add-request.component';\nimport { ClientProfileComponent } from './client/client-dashboard-main/client-profile/client-profile.component';\nimport { ClientDashboardMainComponent } from './client/client-dashboard-main/client-dashboard-main.component';\nimport { CustomersComponent } from './admin-components/dashboard/customers/customers.component';\nimport { RequestsListComponent } from './admin-components/dashboard/requests-list/requests-list.component';\nimport { ClassDirectiveDirective } from './directives/class-directive.directive';\nimport { BootstrapDialogComponent } from './utils-components/bootstrap-dialog/bootstrap-dialog.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { EditCustomerDialogComponent } from './utils-components/edit-customer-dialog/edit-customer-dialog.component';\nimport { InfoComponent } from './admin-components/dashboard/info/info.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { EditPhoneDialogComponent } from './utils-components/edit-phone-dialog/edit-phone-dialog.component';\nimport { ForgotPasswordComponent } from './client/forgot-password/forgot-password.component';\n\nconst config: SocketIoConfig = { url: 'https://smart-phone-baqa.com/api/', options: {} };\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RepairListComponent,\n    LoginComponent,\n    SignupComponent,\n    HeaderComponent,\n    AddCustomerComponent,\n    RepairDetailsComponent,\n    AdminComponent,\n    InputErrorComponent,\n    AddRepairComponent,\n    DialogMessageComponent,\n    PickCustomerComponent,\n    AddDeviceComponent,\n    MainPageComponent,\n    RequestsListComponent,\n    DashboardComponent,\n    VerticalBarsComponent,\n    MainDashboardComponent,\n    SmsComponent,\n    PhoneAuthComponent,\n    ClientMainComponent,\n    ClientPhoneAuthComponent,\n    NormalInputErrorComponent,\n    ClientDashboardComponent,\n    ClientLoginComponent,\n    ClientSignupComponent,\n    ClientAddRequestComponent,\n    ClientProfileComponent,\n    ClientDashboardMainComponent,\n    CustomersComponent,\n    ClassDirectiveDirective,\n    BootstrapDialogComponent,\n    EditCustomerDialogComponent,\n    InfoComponent,\n    EditPhoneDialogComponent,\n    ForgotPasswordComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    HttpClientModule,\n    NgxChartsModule,\n    //SocketIoModule.forRoot(config),\n\n    NgbModule,\n    ModalModule,\n\n    MatSnackBarModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    MatChipsModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatStepperModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatCardModule,\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }, PhoneAuthService, ClientAuthService],\n  bootstrap: [AppComponent],\n  entryComponents: [PickCustomerComponent, DialogMessageComponent, AddDeviceComponent,]\n})\nexport class AppModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from '../admin-components/services/auth.service';\nimport { ClientAuthService } from '../client/services/client-auth.service';\n\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService, private clietAuthService: ClientAuthService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const token = this.authService.getToken() ? this.authService.getToken() : this.clietAuthService.getToken()\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', \"Bearer \" + token)\n    })\n    return next.handle(authReq)\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivateChild, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../admin-components/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n    return true\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    this.authService.autoAuthUser()\n    const isAuth = this.authService.getIsAuthenticated()\n\n    if (!isAuth) {\n      this.router.navigate(['admin/login'])\n    }\n\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/admin-components/services/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  isLoading = false\n  isAuthenticated = false\n  private authListenerSubs: Subscription\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.authService.autoAuthUser(true)\n\n    this.form = new FormGroup({\n      'phone': new FormControl(null, { validators: [Validators.required] }),\n      'password': new FormControl(null, { validators: [Validators.required] }),\n      'keepMeLogedIn': new FormControl(true)\n    })\n\n    this.authListenerSubs = this.authService.getIsAuthenticatedListener().subscribe(isAuthintecated => {\n      this.isAuthenticated = isAuthintecated\n      this.isLoading = false\n    })\n\n\n  }\n\n  ngOnDestroy(): void {\n    this.authListenerSubs?.unsubscribe()\n  }\n\n  onLogin() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.isLoading = true\n    this.authService.login(this.form.value.phone, this.form.value.password,this.form.value.keepMeLogedIn)\n\n    this.form.reset()\n  }\n}\n","<div class=\"box align\">\n\n  <div class=\"login-container\">\n    <header>\n      <h1>تسجيل الدخول</h1>\n    </header>\n\n    <div class=\"form-containe\">\n\n\n      <form [formGroup]=\"form\">\n\n        <div class=\"align-inputs\">\n          <div class=\"input-container\">\n            <p>رقم الهاتف</p>\n            <input placeholder=\"000-0000000\" formControlName=\"phone\" name=\"phoneNumber\" type=\"tel\">\n            <app-normal-input-error  ></app-normal-input-error>\n          </div>\n          <div class=\"input-container\">\n            <p>كلمة السر</p>\n            <input placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" formControlName=\"password\"\n              type=\"password\">\n            <app-normal-input-error ></app-normal-input-error>\n          </div>\n\n\n          <mat-checkbox formControlName=\"keepMeLogedIn\">ابقني متصل</mat-checkbox>\n        </div>\n        <!-- <div class=\"form-links\">\n          <p>نسيت كلمة السر؟</p>\n          <a routerLink=\"/client/signup\" routerLinkActive=\"router-link-active\">\n            <p>انشاء حساب</p>\n          </a>\n        </div> -->\n\n\n\n\n        <button *ngIf=\"!isLoading\" (click)=\"onLogin()\" class=\"green-button\">دخول</button>\n\n      </form>\n\n      <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n\n    </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/admin-components/services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/models/User';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  isLoading = false\n  private authStatusAuth: Subscription\n  selectedItem = 'male'\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    // this.authStatusAuth = this.authService.getAuthStatusListener().subscribe(\n    //   authStatus => {\n    //     this.isLoading = false\n    //   }\n    // )\n  }\n\n\n\n\n  onValidatePassword(form: NgForm) {\n    console.log(form.controls);\n\n    const validatePassword = form.controls.validate_password\n    const password = form.controls.password\n\n    if (validatePassword.value !== password.value) {\n      validatePassword.setErrors({\n        ...validatePassword.errors,\n        passwordNotMatch: true\n      })\n    }\n\n  }\n\n  onSingUp(form: NgForm) {\n    this.onValidatePassword(form)\n\n    if (form.invalid) {\n      return\n    }\n\n\n    this.isLoading = true\n    const user: User = {\n      firstName: form.value.firstName,\n      lastName: form.value.lastName,\n      email: form.value.email,\n      password: form.value.password,\n      gender: form.value.gender\n    }\n\n    this.authService.onSignUp(user)\n\n\n\n    form.reset()\n  }\n\n\n  ngOnDestroy() {\n    this.authStatusAuth?.unsubscribe()\n  }\n}\n","\n<mat-card *ngIf=\"!isLoading\">\n  <form (submit)=\"onSingUp(signupForm)\" #signupForm=\"ngForm\" >\n\n    <mat-form-field>\n      <mat-label>E-mail</mat-label>\n      <input matInput placeholder=\"example@gmail.com\" type=\"email\" name=\"email\" ngModel required email\n        #emailInput=\"ngModel\">\n\n      <mat-error *ngIf=\"emailInput.invalid\">\n        <app-input-error [controller]=\"emailInput\" [errors]=\"emailInput.errors\"></app-input-error>\n      </mat-error>\n\n    </mat-form-field>\n\n\n\n    <mat-form-field>\n      <mat-label>First Name</mat-label>\n      <input matInput placeholder=\"my name\" type=\"text\" name=\"firstName\" ngModel required #firstNameInput=\"ngModel\">\n\n      <mat-error *ngIf=\"firstNameInput.invalid\">\n        <app-input-error [controller]=\"firstNameInput\" [errors]=\"firstNameInput.errors\"></app-input-error>\n      </mat-error>\n\n    </mat-form-field>\n\n\n\n    <mat-form-field>\n      <mat-label>Last Name</mat-label>\n      <input matInput placeholder=\"my name\" type=\"text\" name=\"lastName\" ngModel required #lastNameInput=\"ngModel\">\n\n      <mat-error *ngIf=\"lastNameInput.invalid\">\n        <app-input-error [controller]=\"lastNameInput\" [errors]=\"lastNameInput.errors\"></app-input-error>\n      </mat-error>\n\n    </mat-form-field>\n\n\n\n\n    <div class=\"center container wid\" >\n      <h3>Gender</h3>\n      <mat-radio-group class=\"center\"   #gender=\"ngModel\" name=\"gender\" required [(ngModel)]=\"selectedItem\">\n        <mat-radio-button value=\"male\" >Male</mat-radio-button>\n        <mat-radio-button value=\"female\">Female</mat-radio-button>\n\n        <mat-error *ngIf=\"gender.invalid\">\n          <app-input-error [controller]='gender' [errors]=\"gender.errors\">\n          </app-input-error>\n        </mat-error>\n\n      </mat-radio-group>\n    </div>\n\n\n\n\n    <mat-form-field>\n      <mat-label>Password</mat-label>\n      <input matInput placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" type=\"password\" name=\"password\" ngModel required maxlength=\"16\"\n        minlength=\"6\" #passwordInput=\"ngModel\">\n\n      <div class=\"input-counter\">\n        {{passwordInput.value?.length+\"/16\"}}\n      </div>\n\n      <mat-error *ngIf=\"passwordInput.invalid\">\n        <app-input-error [controller]='passwordInput' [errors]=\"passwordInput.errors\">\n        </app-input-error>\n      </mat-error>\n\n    </mat-form-field>\n\n\n\n    <mat-form-field>\n      <mat-label>Validate Password</mat-label>\n      <input matInput placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\"  type=\"password\" name=\"validate_password\" ngModel required maxlength=\"16\"\n        minlength=\"6\" #password2Input=\"ngModel\"\n        (input)=\"onValidatePassword(signupForm)\">\n\n      <div class=\"input-counter\">\n        {{password2Input.value?.length+\"/16\"}}\n      </div>\n\n      <mat-error *ngIf=\"password2Input.invalid\">\n        <app-input-error [controller]='password2Input' [errors]=\"password2Input.errors\">\n        </app-input-error>\n      </mat-error>\n    </mat-form-field>\n\n\n    <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">Signup</button>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n  </form>\n\n\n\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ClientAuthService } from './services/client-auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientAuthGuard implements CanActivate {\n\n  constructor(private clientAuthService: ClientAuthService, private router: Router) { }\n\n\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    this.clientAuthService.autoAuthUser()\n    const isAuth = this.clientAuthService.getIsAuthenticated()\n\n    if (!isAuth) {\n      return this.router.parseUrl('/client/login')\n    }\n\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CitiesService } from 'src/app/globalServices/cities.service';\nimport { Subscription, Observable, Observer } from 'rxjs';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CompaniesService } from 'src/app/globalServices/companies.service';\nimport { DevicesService } from 'src/app/globalServices/devices.service';\nimport { IssuesService } from 'src/app/globalServices/issues.service';\nimport { RequestDbModel } from 'src/app/models/RequestDbModel';\nimport { RequestsService } from 'src/app/globalServices/requests.service';\nimport { ClientAuthService } from '../../services/client-auth.service';\nimport { selectInput } from '../../../utils-components/validators'\nimport { ClientInfoService } from '../../services/client-info.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Request } from 'src/app/models/Request';\nimport { textCheck } from '../../../utils-components/validators'\n\n@Component({\n  selector: 'app-client-add-request',\n  templateUrl: './client-add-request.component.html',\n  styleUrls: ['./client-add-request.component.css'],\n  providers: [CitiesService, CompaniesService, IssuesService, DevicesService, RequestsService, ClientInfoService]\n})\nexport class ClientAddRequestComponent implements OnInit {\n  cities\n  private citiesSub: Subscription\n  companies\n  private companiesSub: Subscription\n  devices\n  private deviceSub: Subscription\n  issues\n  private issuesSub: Subscription\n  isLoading = false\n\n  mode = 'add'\n  requestId: string\n  request: Request\n  requestSub: Subscription\n\n  message = null\n  messageTimer\n\n  form: FormGroup\n\n\n  constructor(private route: ActivatedRoute, private citiesService: CitiesService, private comapniesService: CompaniesService,\n    private requestsService: RequestsService, private clientAuthService: ClientAuthService,\n    private issuesService: IssuesService, private deviceService: DevicesService) { }\n\n\n  ngOnInit(): void {\n    this.initForm()\n    this.setUpListeners()\n  }\n\n\n  setUpListeners() {\n    this.checkIfHasParam()\n\n    this.citiesService.getCites()\n    this.citiesSub = this.citiesService.getCitiesListener().subscribe(cities => {\n      this.cities = cities\n    })\n\n    this.comapniesService.getCompanies()\n    this.companiesSub = this.comapniesService.getCompaniesListener().subscribe(companies => {\n      this.companies = companies\n      this.devices = null\n    })\n\n\n    this.deviceSub = this.deviceService.getDevicesListener().subscribe(devices => {\n      if (!this.devices)\n        this.devices = devices\n    })\n\n    this.issuesService.getIssues()\n    this.issuesSub = this.issuesService.getIssuesListener().subscribe(issues => {\n      this.issues = issues\n    })\n  }\n\n\n\n\n\n  checkIfHasParam() {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('requestId')) {\n        this.mode = 'edit'\n        this.requestId = paramMap.get('requestId')\n\n        this.isLoading = true\n        this.requestsService.getRequestById(this.requestId)\n\n        this.requestSub = this.requestsService.getRequestListener().subscribe(res => {\n          this.deviceService.getDevicesByCompanyId(res.company._id)\n\n          this.request = res\n\n          this.resetingForm(res)\n\n\n          this.isLoading = false\n        })\n\n\n      } else {\n        this.mode = 'add'\n      }\n\n    })\n  }\n\n\n\n\n  initForm() {\n    this.form = new FormGroup({\n      title: new FormControl(null, { validators: [Validators.required], asyncValidators: [textCheck] }),\n      company: new FormControl('-1', { asyncValidators: [selectInput] }),\n      device: new FormControl('-1', { asyncValidators: [selectInput] }),\n      issue: new FormControl('-1', { asyncValidators: [selectInput] }),\n      otherIssue: new FormControl(null, { asyncValidators: [this.issueCheck] }),\n      city: new FormControl('-1', { asyncValidators: [selectInput] }),\n      whereAbout: new FormControl(null, { validators: [Validators.required], asyncValidators: [textCheck] })\n    })\n  }\n\n\n\n  issueCheck = (control: FormControl): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n    const frObs = Observable.create((observer: Observer<{ [key: string]: any }>) => {\n      const { value } = control\n      if (this.form?.get('issue').value === '1') {\n        if (!(/^([a-z\\u0590-\\u05fe\\u0621-\\u064A]+\\s)*[a-z\\u0590-\\u05fe\\u0621-\\u064A]+$/.test(value))) {\n          observer.next({ text: true })\n        } else if (value?.length === 0 || !value) {\n          observer.next({ required: true })\n        }\n        else {\n          observer.next(null)\n        }\n      }\n      else {\n        observer.next(null)\n      }\n\n      observer.complete()\n    })\n\n    return frObs\n  }\n\n\n\n  onChangeIssue() {\n    const issue = this.form?.get('issue')\n    const otherIssue = this.form?.get('otherIssue')\n\n    if (issue?.value !== '1') {\n      otherIssue.setErrors(null)\n    }\n    console.log(otherIssue);\n  }\n\n\n\n  ngOnDestroy(): void {\n    this.citiesSub?.unsubscribe()\n    this.companiesSub?.unsubscribe()\n    this.deviceSub?.unsubscribe()\n    this.issuesSub?.unsubscribe()\n    this.requestSub?.unsubscribe()\n    clearTimeout(this.messageTimer)\n  }\n\n\n\n  onSelectCompany() {\n    this.devices = null\n    this.form.get('device').setValue('-1')\n    this.deviceService.getDevicesByCompanyId(this.form.get('company').value)\n  }\n\n\n\n  resetingForm(data: Request = null) {\n    if (!data) {\n      this.form.setValue({\n        'company': '-1',\n        'device': '-1',\n        'issue': '-1',\n        'city': '-1',\n        'title': null,\n        'whereAbout': null,\n        'otherIssue': null\n      })\n      return\n    }\n\n    this.form.setValue({\n      'title': data.title,\n      'company': data.company._id,\n      'device': data.device._id,\n      'issue': data.issue ? data.issue._id : '1',\n      'city': data.city._id,\n      'otherIssue': data.otherIssue,\n      'whereAbout': data.whereAbout\n    })\n  }\n\n\n\n  onAddingRequest(userId) {\n\n    const issue = this.form.get('issue').value\n\n    const request: RequestDbModel = {\n      title: this.form.get('title').value,\n      company: this.form.get('company').value,\n      device: this.form.get('device').value,\n      customer: userId,\n      issue: issue === '1' ? null : issue,\n      otherIssue: this.form.get('otherIssue').value,\n      city: this.form.get('city').value,\n      whereAbout: this.form.get('whereAbout').value\n    }\n\n    const success = () => {\n      this.isLoading = false\n      this.message = 'تم قبول طلبك بنجاح'\n\n      this.startTimer()\n\n      this.form.reset()\n      this.resetingForm()\n    }\n    const error = () => {\n      this.isLoading = false\n    }\n\n    this.requestsService.addRequest(request, error, success)\n  }\n\n\n  startTimer() {\n    this.messageTimer = setTimeout(() => {\n      this.message = null\n    }, 3000)\n  }\n\n\n\n  onUpdatingRequest() {\n    const updateOps = []\n\n    const hash = Object.keys(this.form.value).map(name => ({ name, value: this.form.value[name] }))\n\n    for (let i = 0, k = 0; i < hash.length; i++) {\n      if (hash[i].value != this.request[hash[i].name] && hash[i].value != this.request[hash[i].name]?._id) {\n        if (hash[i].name === 'issue' && hash[i].value === '1') {\n          hash[i].value = null\n        }\n        else {\n          updateOps[k++] = {\n            'name': hash[i].name,\n            'value': hash[i].value\n          }\n        }\n      }\n    }\n\n    console.log('update', updateOps);\n\n\n\n    if (updateOps.length > 0)\n      this.requestsService.updateReuqest(this.requestId, updateOps).subscribe(res => {\n        this.startTimer()\n        this.isLoading = false\n        this.message = 'تم التعديل بنجاح'\n        this.requestsService.getRequestById(this.requestId)\n      })\n    else {\n      this.isLoading = false\n      this.startTimer()\n      this.message = 'لم تقم بتعديل اي حقل'\n    }\n  }\n\n\n\n  onAddingUpdatingRequest() {\n    this.form.markAllAsTouched()\n    this.form.markAsTouched()\n\n\n\n    if (this.form.invalid) {\n      console.log(this.form);\n\n      return\n    }\n\n    const userId = this.clientAuthService.getUser()._id\n\n    if (!userId)\n      return\n\n    this.isLoading = true\n\n\n    if (this.mode === 'edit') {\n      this.onUpdatingRequest()\n\n    } else {\n      this.onAddingRequest(userId)\n    }\n\n  }\n}\n","<div class=\"main-container\">\n\n\n\n  <header class=\"dash-board-header\">\n    <h1>سمارت فون لعندك</h1>\n  </header>\n\n\n  <div class=\"dashboard-card\">\n\n    <div class=\"card-header\">\n      <h3>قم بملاء الملف</h3>\n    </div>\n\n\n    <form (submit)=\"onAddingUpdatingRequest()\" [formGroup]=\"form\">\n      <div class=\"input-container\">\n        <p>عنوان الطلب</p>\n        <input formControlName=\"title\" type=\"text\">\n        <app-normal-input-error *ngIf=\"form.touched && form.get('title').touched\" name=\"title\"\n          [errors]=\"form.get('title').errors\"></app-normal-input-error>\n      </div>\n\n      <div class=\"input-container\">\n        <p>نوع شركة الجهاز</p>\n        <select (change)=\"onSelectCompany()\" formControlName=\"company\">\n          <option value=\"-1\">اختر الشركة</option>\n          <option *ngFor=\"let company of companies\" value={{company._id}}>{{company.name}}</option>\n        </select>\n        <app-normal-input-error *ngIf=\"form.touched && form.get('company').touched\" name=\"company\"\n          [errors]=\"form.get('company').errors\"></app-normal-input-error>\n      </div>\n\n\n      <div class=\"input-container\">\n        <p>نوع الجهاز</p>\n        <select formControlName=\"device\">\n          <option value=\"-1\">اختر النوع</option>\n          <option *ngFor=\"let device of devices\" value={{device._id}}>{{device.model}}</option>\n          {{form.get('device').updateValueAndValidity()}}\n        </select>\n\n        <app-normal-input-error *ngIf=\"form.touched && form.get('device').touched\" name=\"device\"\n          [errors]=\"form.get('device').errors\"></app-normal-input-error>\n      </div>\n\n\n\n      <div class=\"input-container\">\n        <p>المشكلة</p>\n        <select formControlName=\"issue\" (change)=\"onChangeIssue()\">\n          <option value=\"-1\">اختر المشكلة</option>\n          <option *ngFor=\"let issue of issues\" value={{issue._id}}>{{issue.name}}</option>\n          <option value=\"1\">مشكلة اخرى</option>\n        </select>\n        <app-normal-input-error *ngIf=\"form.touched && form.get('issue').touched\" name=\"issue\"\n          [errors]=\"form.get('issue').errors\"></app-normal-input-error>\n\n        <div *ngIf=\"form.get('issue').value && form.get('issue').value==1\" class=\"input-container\">\n          <p>مشكلة اخرى</p>\n          <textarea formControlName=\"otherIssue\" rows=\"10\"></textarea>\n          <app-normal-input-error *ngIf=\"form.touched && form.get('otherIssue').touched\" name=\"other issue\"\n          [errors]=\"form.get('otherIssue').errors\"></app-normal-input-error>\n        </div>\n\n      </div>\n\n      <div class=\"input-container\">\n        <p>المدينة</p>\n        <select formControlName=\"city\">\n          <option value=\"-1\">اختر المدينة</option>\n          <option *ngFor=\"let city of cities\" value={{city._id}}>{{city.name}}</option>\n        </select>\n        <app-normal-input-error *ngIf=\"form.touched && form.get('city').touched\" name=\"city\"\n          [errors]=\"form.get('city').errors\"></app-normal-input-error>\n      </div>\n\n      <div class=\"input-container\">\n        <p>مكان التواجد</p>\n        <input formControlName=\"whereAbout\" type=\"text\">\n        <app-normal-input-error *ngIf=\"form.touched && form.get('whereAbout').touched\" name=\"where about\"\n          [errors]=\"form.get('whereAbout').errors\"></app-normal-input-error>\n      </div>\n\n      <h1 *ngIf=\"message\">{{message}}</h1>\n\n\n\n\n      <div *ngIf=\"!isLoading \" class=\"form-button\">\n        <button class=\"green-button\"><span *ngIf=\"mode=='edit'\">تعديل</span> <span *ngIf=\"mode=='add'\">اضف\n            طلب</span></button>\n      </div>\n\n    </form>\n\n    <div class=\"spinner\">\n      <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    </div>\n\n\n  </div>\n\n\n\n\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientAuthService } from '../services/client-auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogMessageComponent } from 'src/app/utils-components/dialog-message/dialog-message.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-client-dashboard-main',\n  templateUrl: './client-dashboard-main.component.html',\n  styleUrls: ['./client-dashboard-main.component.css']\n})\nexport class ClientDashboardMainComponent implements OnInit {\n  user\n  userListener: Subscription\n\n  constructor(private clietAuthService: ClientAuthService, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.user = this.clietAuthService.getUser()\n    this.userListener = this.clietAuthService.getUserListener().subscribe(res => {\n      this.user = res\n    })\n  }\n\n  onLogOut() {\n    const confirm = () => {\n      this.clietAuthService.logout()\n      this.dialog.closeAll()\n    }\n    this.dialog.open(DialogMessageComponent, { data: { buttons: true, confirm, message: 'هل أنت متاكد لتسجيل الخروج ؟', title: 'تسجيل الخروج' } })\n  }\n\n  ngOnDestroy(): void {\n    this.userListener.unsubscribe()\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" >\n\n  <div class=\"nav-header\">\n    <div class=\"user\">\n      <h3> مرحبا بك , <b></b></h3>\n      <h3>{{user.lastName}} {{user.firstName}}</h3>\n    </div>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n      aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  </div>\n\n\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div class=\"navbar-nav\">\n      <a routerLink=\"/client\" class=\"nav-item nav-link\" [routerLinkActiveOptions]=\"{ exact: true }\"\n        routerLinkActive=\"active\">\n        <li>الرئيسية</li>\n      </a>\n      <a routerLink=\"/client/addRequest\" class=\"nav-item nav-link\" routerLinkActive=\"active\">\n        <li>اضافة طلب</li>\n      </a>\n      <a routerLink=\"/client/profile\" class=\"nav-item nav-link\" routerLinkActive=\"active\">\n        <li>ملف شخصي</li>\n      </a>\n      <a  (click)=\"onLogOut()\" class=\"nav-item nav-link\" >\n        <li class=\"link\">خروج</li>\n      </a>\n    </div>\n  </div>\n</nav>\n\n<div class=\"dashborad-container\">\n\n  <div class=\"side-nav\">\n    <div class=\"nav-inner\">\n\n\n      <div class=\"user\">\n        <h3> مرحبا بك , <b></b></h3>\n        <h3>{{user.lastName}} {{user.firstName}}</h3>\n      </div>\n\n\n      <ul>\n        <a routerLink=\"/client\" [routerLinkActiveOptions]=\"{ exact: true }\" routerLinkActive=\"active-link\">\n          <li>الرئيسية</li>\n        </a>\n        <a routerLink=\"/client/addRequest\" routerLinkActive=\"active-link\">\n          <li>اضافة طلب </li>\n        </a>\n        <a routerLink=\"/client/profile\" routerLinkActive=\"active-link\">\n          <li>ملف شخصي</li>\n        </a>\n\n\n      </ul>\n\n      <div class=\"divider-vertical\"></div>\n\n\n      <div class=\"logout\">\n        <h4 (click)=\"onLogOut()\">خروج</h4>\n      </div>\n    </div>\n\n  </div>\n\n\n\n\n  <div class=\"center-container\">\n\n    <router-outlet></router-outlet>\n\n\n\n  </div>\n\n\n  <!-- <div class=\"right-container\">\n\n    <div class=\"notification-container\">\n      <header class=\"dash-board-header\"><h1>اشعارات</h1></header>\n\n\n\n    </div>\n\n  </div> -->\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientAuthService } from '../../services/client-auth.service';\nimport { RequestsService } from 'src/app/globalServices/requests.service';\nimport { Request } from 'src/app/models/Request';\nimport { ClientInfoService } from '../../services/client-info.service';\nimport { Subscription } from 'rxjs';\nimport { NumOf } from 'src/app/models/NumOf';\nimport { DialogMessageComponent } from 'src/app/utils-components/dialog-message/dialog-message.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport * as moment from 'moment';\nimport * as momentTimezone from 'moment-timezone';\nimport { statusHandler } from 'src/app/utils-components/statusHandler';\n\n@Component({\n  selector: 'app-client-dashboard',\n  templateUrl: './client-dashboard.component.html',\n  styleUrls: ['./client-dashboard.component.css'],\n  providers: [RequestsService]\n})\nexport class ClientDashboardComponent implements OnInit {\n  private requestsSub: Subscription\n  requests: Request[]\n\n  private staticInfoSub: Subscription\n  staticInfo: NumOf[]\n\n  private numOfRequestsSub: Subscription\n\n  isLoading = []\n  numOfRequests = 0\n  currentPage = 1\n  requestsPerPage = 10\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n  cardColor: string = '#232837';\n\n\n  constructor(private requestsService: RequestsService,\n    private clientInfoService: ClientInfoService, private dialog: MatDialog) {\n    moment.locale('he')\n\n  }\n\n  ngOnInit(): void {\n    this.isLoading['requests'] = true\n    this.isLoading['info'] = true\n\n\n    this.requestsService.getRequestsByCustomerId(this.currentPage, this.requestsPerPage)\n    this.requestsSub = this.requestsService.getRequestsListener().subscribe(res => {\n      this.requests = res.requests\n      this.isLoading['requests'] = false\n    })\n\n\n    this.clientInfoService.getClientRequestsStatics()\n    this.staticInfoSub = this.clientInfoService.getClientRequestsStaticsListener().subscribe(res => {\n      this.staticInfo = res\n      this.isLoading['info'] = false\n    })\n\n    this.numOfRequestsSub = this.clientInfoService.getPaginationStaticsListener().subscribe(res => {\n      this.numOfRequests = res\n    })\n  }\n\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading['requests'] = true\n    this.currentPage = pageData.pageIndex + 1\n    this.requestsPerPage = pageData.pageSize\n    this.requestsService.getRequestsByCustomerId(this.currentPage, this.requestsPerPage)\n  }\n\n  statusHandler(status) {\n    return statusHandler(status)\n  }\n\n  dateFormat(date: string) {\n    return moment(date).fromNow()\n  }\n\n  fullDateFormat(date: string) {\n    let timezoneDate = momentTimezone(date)\n    return timezoneDate.tz('Asia/hebron').format('LLLL')\n  }\n\n\n  onCancelRequest(request: Request) {\n    const confirm = () => {\n      const updateOps = [\n        { name: 'status', value: 'CANCEL' }\n      ]\n\n      this.requestsService.updateReuqest(request._id, updateOps).subscribe(res => {\n        request.status = 'CANCEL'\n        this.dialog.closeAll()\n      })\n    }\n\n    this.dialog.open(DialogMessageComponent, {\n      data:\n      {\n        buttons: true, title: 'الغاء طلب',\n        message: 'هل انت متأكد لالغاء الطلب ؟', confirm\n      }\n    })\n\n  }\n\n\n\n  ngOnDestroy(): void {\n    this.staticInfoSub?.unsubscribe()\n    this.requestsSub?.unsubscribe()\n    this.numOfRequestsSub?.unsubscribe()\n  }\n}\n","<div class=\"main-container\">\n\n\n\n  <header class=\"dash-board-header\">\n    <h1>الرئيسة</h1>\n  </header>\n\n  <div class=\"cards-container\">\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>معلومات عامة</h3>\n      </div>\n\n      <div class=\"chart\">\n        <ngx-charts-number-card [scheme]=\"colorScheme\" [results]=\"staticInfo\" [cardColor]=\"cardColor\">\n        </ngx-charts-number-card>\n      </div>\n\n    </div>\n\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>طلباتي</h3>\n      </div>\n\n\n      <div *ngIf=\"requests && requests.length==0\" class=\"center-container\">\n        <p>لا يوجد لديك طلبات </p>\n      </div>\n\n      <div *ngIf=\"isLoading['requests']\" class=\"center-container\">\n        <mat-spinner></mat-spinner>\n      </div>\n\n      <div *ngIf=\"!isLoading['requests']\">\n\n        <mat-accordion multi=\"true\">\n\n          <mat-expansion-panel *ngFor=\"let request of requests\">\n            <mat-expansion-panel-header>\n\n              <div class=\"expansion-header\">\n\n                <div class=\"header\">\n                  <p>عنوان الطلب :</p>\n                  <p>{{request.title}}</p>\n                </div>\n\n                <div class=\"spacer\"></div>\n\n                <div class=\"status-box\">\n                  <div class=\"status\" [ngStyle]=\"statusHandler(request.status)\">\n                  </div>\n                  <div>\n                    <span *ngIf=\"request.status=='DONE'\">تم</span>\n                    <span *ngIf=\"request.status=='IN-PROGRESS'\">قيد التنفيذ</span>\n                    <span *ngIf=\"request.status=='CANCEL'\">تم الالغاء</span>\n                  </div>\n                </div>\n              </div>\n\n\n\n            </mat-expansion-panel-header>\n\n            <div class=\"panel-data\">\n\n              <div class=\"panel-info\">\n                <p>البلدة</p>\n                <p>{{request.city.name}}</p>\n              </div>\n\n              <div class=\"panel-info\">\n                <p>المشكلة</p>\n                <p>{{request.issue?.name}}</p>\n              </div>\n\n              <div *ngIf=\"request.otherIssue\" class=\"panel-info\">\n                <p>مشكلة اخرى</p>\n                <p>{{request.otherIssue}}</p>\n              </div>\n\n              <div class=\"panel-info\">\n                <p>نوع الجهاز</p>\n                <p>{{request.device.model}}</p>\n              </div>\n\n              <div class=\"panel-info\">\n                <p>الشركة</p>\n                <p>{{request.company.name}}</p>\n\n              </div>\n              <div class=\"panel-info\">\n                <p>مكان التواجد</p>\n                <p>{{request.whereAbout}}</p>\n              </div>\n            </div>\n\n            <div class=\"panel-date\">\n              <p>{{dateFormat(request.createdAt)}}</p>\n              <p>{{fullDateFormat(request.createdAt)}}</p>\n            </div>\n            <mat-action-row *ngIf=\"request.status!=='DONE'\">\n              <a mat-raised-button color=\"primary\" [routerLink]=\"['/client/editRequest',request._id]\">تعديل</a>\n              <button mat-raised-button color=\"warn\" (click)=\"onCancelRequest(request)\">الغاء</button>\n\n            </mat-action-row>\n\n\n          </mat-expansion-panel>\n        </mat-accordion>\n\n\n\n      </div>\n\n      <div class=\"spacer\"></div>\n\n      <mat-paginator *ngIf=\"requests && requests.length>0\" [length]=\"numOfRequests\" [pageSize]=\"requestsPerPage\"\n        (page)=\"onChangedPage($event)\">\n      </mat-paginator>\n    </div>\n\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CitiesService } from 'src/app/globalServices/cities.service';\nimport { Subscription } from 'rxjs';\nimport { ClientInfoService } from '../../services/client-info.service';\nimport { Customer } from 'src/app/models/Customer';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditPhoneDialogComponent } from 'src/app/utils-components/edit-phone-dialog/edit-phone-dialog.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { selectInput, nameCheck } from '../../../utils-components/validators'\nimport { ClientAuthService } from '../../services/client-auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-client-profile',\n  templateUrl: './client-profile.component.html',\n  styleUrls: ['./client-profile.component.css'],\n  providers: [CitiesService, ClientInfoService]\n})\nexport class ClientProfileComponent implements OnInit {\n  cities\n  citiesSub: Subscription\n  customer: Customer\n  form: FormGroup\n  isLoading: boolean = false\n\n  constructor(private _snackBar: MatSnackBar, private citiesService: CitiesService, private clientAuth: ClientAuthService, private clientInfoService: ClientInfoService, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      firstName: new FormControl(this.customer?.firstName, { validators: [Validators.required], asyncValidators: [nameCheck] }),\n      lastName: new FormControl(this.customer?.lastName, { validators: [Validators.required], asyncValidators: [nameCheck] }),\n      city: new FormControl({value: this.customer?.city, disabled: true}, { asyncValidators: [selectInput] }),\n    })\n\n    this.citiesService.getCites()\n    this.citiesSub = this.citiesService.getCitiesListener().subscribe(data => {\n      this.cities = data\n    })\n\n\n    this.clientInfoService.getCustomerDetails().subscribe(res => {\n      this.customer = res.customer\n      this.form.setValue({\n        firstName: this.customer.firstName,\n        lastName: this.customer.lastName,\n        city: this.customer.city._id\n      })\n      this.form.updateValueAndValidity()\n    })\n\n  }\n\n\n\n  editPhone() {\n    const ref = this.dialog.open(EditPhoneDialogComponent, { panelClass: 'myapp-no-padding-dialog' })\n    ref.afterClosed().subscribe(res => {\n      if (res)\n        this.customer.phone = res\n    })\n  }\n\n\n\n\n  onUpdate() {\n    if (this.form.invalid)\n      return\n\n    this.isLoading = true\n\n    const updateOps = []\n\n    const hash = Object.keys(this.form.value).map(name => ({ name, value: this.form.value[name] }))\n\n    for (let i = 0, k = 0; i < hash.length; i++) {\n      if (hash[i].value != this.customer[hash[i].name] && hash[i].value != this.customer[hash[i].name]?._id) {\n        updateOps[k++] = {\n          'name': hash[i].name,\n          'value': hash[i].value\n        }\n      }\n    }\n\n\n    if (updateOps.length > 0)\n      this.clientInfoService.updateCustomer(updateOps).subscribe(res => {\n        this.clientAuth.updateUserData(res.customer)\n        this.customer = res.customer\n        this.isLoading = false\n      }, err => {\n        this.isLoading = false\n      })\n    else {\n      this.openSnackBar('لم تقم بتعديل اي حقل !', null)\n      this.isLoading = false\n    }\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n\n  ngOnDestroy(): void {\n    this.citiesSub.unsubscribe()\n  }\n\n}\n","<div class=\"main-container\">\n\n\n\n  <header class=\"dash-board-header\">\n    <h1>الملف الشخصي</h1>\n  </header>\n\n  <div class=\"center-content-container\">\n\n    <div class=\"dashboard-card\">\n      <div class=\"card-header\">\n        <h3>معلومات عامة</h3>\n      </div>\n\n\n\n\n\n      <form (submit)=\"onUpdate()\" [formGroup]=\"form\">\n\n        <div class=\"input-container\">\n          <p>الاسم الشخصي</p>\n          <input formControlName=\"firstName\" type=\"text\">\n          <app-normal-input-error *ngIf=\"form.touched && form.get('firstName').touched\" name=\"firstName\"\n            [errors]=\"form.get('firstName').errors\"></app-normal-input-error>\n        </div>\n\n\n        <div class=\"input-container\">\n          <p>العائلة</p>\n          <input formControlName=\"lastName\" type=\"text\">\n          <app-normal-input-error *ngIf=\"form.touched && form.get('lastName').touched\" name=\"lastName\"\n            [errors]=\"form.get('lastName').errors\"></app-normal-input-error>\n        </div>\n\n\n\n        <div class=\"input-container\">\n          <p>رقم الهاتف</p>\n          <div class=\"inner-input-container\">\n            <input type=\"text\" [value]=\"customer?.phone\" disabled>\n            <p class=\"link\" (click)=\"editPhone()\">تعديل</p>\n          </div>\n        </div>\n\n\n\n        <div class=\"input-container\">\n          <p>المدينة</p>\n          <select formControlName=\"city\">\n            <option value=\"-1\">اختر المدينة</option>\n            <option *ngFor=\"let city of cities\" value={{city._id}}>{{city.name}}</option>\n          </select>\n          <app-normal-input-error *ngIf=\"form.touched && form.get('city').touched\" name=\"city\"\n            [errors]=\"form.get('city').errors\"></app-normal-input-error>\n        </div>\n\n\n        <button *ngIf=\"!isLoading\" class=\"green-button\">تعديل</button>\n\n        <div class=\"spinner\" *ngIf=\"isLoading\">\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n\n      </form>\n\n\n\n    </div>\n\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { phoneNumber } from '../../utils-components/validators'\nimport { ClientAuthService } from '../services/client-auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-client-login',\n  templateUrl: './client-login.component.html',\n  styleUrls: ['./client-login.component.css']\n})\nexport class ClientLoginComponent implements OnInit {\n\n  form: FormGroup\n  isLoading = false\n\n  constructor(private clientAuthService: ClientAuthService) {\n    this.clientAuthService.autoAuthUser(true)\n  }\n\n\n\n  ngOnInit(): void {\n\n\n    this.form = new FormGroup({\n      phone: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(6), Validators.maxLength(24)],\n        asyncValidators: [phoneNumber]\n      }),\n      password: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(8), Validators.maxLength(16)]\n      }),\n      keepMeLogedIn: new FormControl(false),\n    })\n\n    this.clientAuthService.getIsAuthenticatedListener().subscribe(isAuth => {\n      this.isLoading = isAuth\n    })\n  }\n\n\n\n  onLogin() {\n    if (this.form.invalid){\n      this.form.markAsTouched()\n      return\n    }\n\n    this.isLoading = true\n    this.clientAuthService.login(this.form.get('phone').value, this.form.get('password').value,this.form.get('keepMeLogedIn').value)\n  }\n\n}\n","<div class=\"box align\">\n\n  <div class=\"login-container\">\n    <header>\n      <h1>تسجيل الدخول</h1>\n    </header>\n\n    <div class=\"form-containe\">\n\n\n      <form (submit)=\"onLogin()\" [formGroup]=\"form\">\n\n        <div class=\"align-inputs\">\n          <div class=\"input-container\">\n            <p>رقم الهاتف</p>\n            <input placeholder=\"000-0000000\" formControlName=\"phone\" name=\"phoneNumber\" type=\"tel\">\n            <app-normal-input-error *ngIf=\"form.touched ||form.get('phone').touched\" name=\"phone number\"\n              [errors]=\"form.get('phone').errors\"></app-normal-input-error>\n          </div>\n          <div class=\"input-container\">\n            <p>كلمة السر</p>\n            <input placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" formControlName=\"password\"\n              type=\"password\">\n            <app-normal-input-error *ngIf=\"form.touched || form.get('password').touched\" name=\"password\"\n              [errors]=\"form.get('password').errors\"></app-normal-input-error>\n          </div>\n\n\n          <mat-checkbox formControlName=\"keepMeLogedIn\">ابقني متصل</mat-checkbox>\n        </div>\n        <div class=\"form-links\">\n          <a routerLink=\"/client/forgotPassword\" routerLinkActive=\"router-link-active\">\n            <p>نسيت كلمة السر؟</p>\n          </a>\n          <a routerLink=\"/client/signup\" routerLinkActive=\"router-link-active\">\n            <p>انشاء حساب</p>\n          </a>\n        </div>\n\n\n\n        <button *ngIf=\"!isLoading\" class=\"green-button\">دخول</button>\n\n      </form>\n\n      <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n\n    </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientAuthService } from '../services/client-auth.service';\nimport { ClientInfoService } from '../services/client-info.service';\n\n@Component({\n  selector: 'app-client-main',\n  templateUrl: './client-main.component.html',\n  styleUrls: ['./client-main.component.css'],\n  providers: [ClientInfoService]\n})\nexport class ClientMainComponent implements OnInit {\n\n  constructor(private clientAuthService: ClientAuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n  <a routerLink=\"/\"><img src=\"../../../assets/img/logo-no-title.png\" alt=\"\"></a>\n  <a routerLink=\"/\">\n    <h1>Smart Phone</h1>\n  </a>\n</nav>\n<main class=\"content\">\n  <router-outlet></router-outlet>\n</main>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client-phone-auth',\n  templateUrl: './client-phone-auth.component.html',\n  styleUrls: ['./client-phone-auth.component.css']\n})\nexport class ClientPhoneAuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"main\">\n\n  <app-phone-auth nav='/client/request'></app-phone-auth>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { MatHorizontalStepper } from '@angular/material/stepper';\nimport { CitiesService } from 'src/app/globalServices/cities.service';\nimport { Subscription } from 'rxjs';\nimport { selectInput, nameCheck, matchPassword } from '../../utils-components/validators'\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { ClientAuthService } from '../services/client-auth.service';\nimport { CustomerDbModel } from '../../models/CustomerDbModel'\nimport { PhoneAuthService } from 'src/app/utils-components/phone-auth/phone-auth.service';\n\n@Component({\n  selector: 'app-client-signup',\n  templateUrl: './client-signup.component.html',\n  styleUrls: ['./client-signup.component.css'],\n  providers: [CitiesService, PhoneAuthService, {\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class ClientSignupComponent implements OnInit {\n  isLinear = true\n  forms: FormGroup[] = []\n  cities: { name: string, _id: string }[] = []\n  citiesSub: Subscription\n\n  constructor(private citiesService: CitiesService, private clientAuth: ClientAuthService, private phoneAuthService: PhoneAuthService) { }\n\n  ngOnInit(): void {\n    this.citiesService.getCites()\n    this.citiesSub = this.citiesService.getCitiesListener().subscribe(cities => {\n      this.cities = cities\n    })\n\n\n    this.forms['personalInfo'] = new FormGroup({\n      firstName: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(2)],\n        asyncValidators: [nameCheck]\n      }),\n      lastName: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(2)]\n      }),\n      city: new FormControl('-1', {\n        asyncValidators: [selectInput]\n      }),\n      gender: new FormControl('male', {\n        validators: [Validators.required]\n      })\n    })\n\n    this.forms['phoneAuth'] = new FormGroup({\n      phoneIsValid: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      })\n    })\n\n    this.forms['password'] = new FormGroup({\n      password: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(8), Validators.maxLength(16)]\n      }),\n      verifyPassword: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(8), Validators.maxLength(16)]\n      })\n    })\n\n    // this.forms[1] = new FormGroup({\n\n    // })\n  }\n\n\n  ngOnDestroy(): void {\n    this.citiesSub.unsubscribe()\n  }\n\n  isDone(e, steper: MatHorizontalStepper) {\n    this.forms['phoneAuth'].controls.phoneIsValid.setValue(true)\n    steper.next()\n  }\n\n\n\n  checkPasswordMatch() {\n    matchPassword(this.forms['password'].controls.password, this.forms['password'].controls.verifyPassword);\n    (this.forms['password'].controls.verifyPassword as FormControl).markAsTouched()\n  }\n\n\n  onSingUp() {\n    for (const form of this.forms) {\n      if (form.invalid)\n        return\n    }\n\n    const { phoneNumber, countryCode } = this.phoneAuthService.getPhoneNumberAndCountryCode()\n\n\n\n    const customer: CustomerDbModel = {\n      firstName: this.forms['personalInfo'].get('firstName').value,\n      lastName: this.forms['personalInfo'].get('lastName').value,\n      city: this.forms['personalInfo'].get('city').value,\n      gender: this.forms['personalInfo'].get('gender').value,\n      phone: phoneNumber,\n      countryCode,\n      password: this.forms['password'].get('password').value\n    }\n\n    this.clientAuth.onSignUp(customer)\n  }\n\n}\n","<div class=\"box align\">\n\n  <div class=\"login-container\">\n    <header>\n      <h1>تسجيل مستخدم</h1>\n    </header>\n\n\n\n    <mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\n\n      <mat-step [stepControl]=\"forms['personalInfo']\">\n        <form [formGroup]=\"forms['personalInfo']\">\n          <ng-template matStepLabel>معلومات شخصية</ng-template>\n          <div class=\"input-container\">\n            <p>الاسم الشخصي</p>\n            <input formControlName=\"firstName\" type=\"text\">\n            <app-normal-input-error *ngIf=\"forms['personalInfo'].get('firstName').touched\" name=\"first name\"\n              [errors]=\"forms['personalInfo'].get('firstName').errors\"></app-normal-input-error>\n          </div>\n\n          <div class=\"input-container\">\n            <p>العائلة</p>\n            <input formControlName=\"lastName\" type=\"text\">\n            <app-normal-input-error *ngIf=\"forms['personalInfo'].get('lastName').touched\" name=\"last name\"\n              [errors]=\"forms['personalInfo'].get('lastName').errors\"></app-normal-input-error>\n          </div>\n\n          <div class=\"input-container\">\n            <p>المدينة</p>\n            <select id=\"cities\" formControlName=\"city\">\n              <option value=\"-1\">اختر المدينة</option>\n              <option *ngFor=\"let city of cities\" value={{city._id}}>{{city.name}}</option>\n            </select>\n            <app-normal-input-error *ngIf=\"forms['personalInfo'].get('city').touched\" name=\"city\"\n              [errors]=\"forms['personalInfo'].get('city').errors\"></app-normal-input-error>\n          </div>\n\n\n          <mat-radio-group formControlName=\"gender\">\n            <mat-radio-button value=\"male\">ذكر</mat-radio-button>\n            <mat-radio-button value=\"female\">انثى</mat-radio-button>\n          </mat-radio-group>\n\n          <div>\n            <button class=\"green-button\" matStepperNext>التالي</button>\n          </div>\n        </form>\n      </mat-step>\n\n\n\n      <mat-step [stepControl]=\"forms['phoneAuth']\">\n        <form class=\"full-width\" [formGroup]=\"forms['phoneAuth']\">\n          <ng-template matStepLabel>رقم الهاتف</ng-template>\n          <app-phone-auth (isDone)=\"isDone($event,stepper)\"></app-phone-auth>\n\n          <!-- <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button class=\"green-button\" matStepperNext>التالي</button>\n          </div> -->\n        </form>\n      </mat-step>\n\n\n\n      <mat-step [stepControl]=\"forms['password']\">\n        <form  [formGroup]=\"forms['password']\">\n          <ng-template matStepLabel>كلمة السر</ng-template>\n\n          <div class=\"input-container\">\n            <p>كلمة السر</p>\n            <input placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\"  type=\"password\"\n            formControlName=\"password\">\n            <app-normal-input-error *ngIf=\"forms['password'].get('password').touched\" name=\"password\"\n            [errors]=\"forms['password'].get('password').errors\"></app-normal-input-error>\n          </div>\n          <div class=\"input-container\">\n            <p>تأكيد كلمة السر</p>\n            <input placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;\" (change)=\"checkPasswordMatch()\" type=\"password\" formControlName=\"verifyPassword\" >\n            <app-normal-input-error *ngIf=\"forms['password'].get('verifyPassword').touched\" name=\"verify-password\"\n            [errors]=\"forms['password'].get('verifyPassword').errors\"></app-normal-input-error>\n          </div>\n\n\n          <div>\n            <button class=\"green-button\" (click)=\"onSingUp()\">تسجيل</button>\n            <button mat-button (click)=\"stepper.reset()\">اعاده</button>\n          </div>\n\n        </form>\n      </mat-step>\n\n    </mat-horizontal-stepper>\n\n    <div class=\"has-account\">\n\n      <p>تملك حساب قم بتسجيل الدخول <span class=\"link\" routerLink=\"/client/login\">هنا</span></p>\n\n    </div>\n\n\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ForgotPasswordService } from 'src/app/globalServices/forgot-password.service';\nimport {  NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css'],\n  providers: [ForgotPasswordService]\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  isLoading = false\n  step = 1\n\n  constructor(private forgotPasswordService: ForgotPasswordService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  sendForgotPasswordRequest(form: NgForm) {\n    if (form.invalid)\n      return\n\n    this.isLoading = true\n    this.forgotPasswordService.addForgotPasswordRequest(form.value.phone, () => {\n      this.step++\n      this.isLoading = false\n    })\n  }\n\n\n  sendCodeAgain() {\n    this.forgotPasswordService.sendMessageAgain()\n  }\n\n\n  onVerify(form: NgForm) {\n    if (form.invalid)\n      return\n\n    this.isLoading = true\n    this.forgotPasswordService.verifyRequest(form.value.code, () => {\n      this.step++\n      this.isLoading = false\n    })\n  }\n\n  onChangePassword(form: NgForm) {\n\n    if (form.value.password !== form.value.confirmPassword) {\n      form.controls.confirmPassword.setErrors({\n        passwordNotMatch: true\n      })\n    }\n\n    if (form.invalid)\n      return\n\n\n    this.isLoading = true\n    if (form.invalid)\n      return\n    this.forgotPasswordService.changePassword(form.value.password, () => {\n      this.isLoading = false\n      this.router.navigate(['/client/login'])\n    })\n  }\n}\n","<div class=\"box align\">\n\n  <div class=\"login-container\" *ngIf=\"step==1\">\n    <header>\n      <h1>نسيت كلمة المرور</h1>\n    </header>\n    <div class=\"form-containe\">\n      <form #form=\"ngForm\" (submit)=\"sendForgotPasswordRequest(form)\">\n        <div class=\"align-inputs\">\n          <div class=\"input-container\">\n            <p>رقم الهاتف</p>\n            <input ngModel #phone=\"ngModel\" name=\"phone\" required placeholder=\"000-0000000\" type=\"tel\">\n            <app-normal-input-error name=\"phone number\" *ngIf=\"phone.touched\" [errors]=\"phone.errors\">\n            </app-normal-input-error>\n          </div>\n        </div>\n        <button *ngIf=\"!isLoading\"  class=\"green-button\">ارسل</button>\n      </form>\n      <div class=\"spinner-border text-success\" *ngIf=\"isLoading\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </div>\n\n\n\n  <div class=\"login-container\" *ngIf=\"step==2\">\n    <header>\n      <h1>نسيت كلمة المرور</h1>\n    </header>\n\n\n    <div class=\"form-containe\" (submit)=\"onVerify(form)\">\n      <p>سيتم ارسال رسالة الي الرقم الذي ادخلتة</p>\n      <p class=\"link\" (click)=\"sendCodeAgain()\">ارسل مرة اخرى</p>\n\n      <form #form=\"ngForm\">\n        <div class=\"align-inputs\">\n          <div class=\"input-container\">\n            <p>الرقم السري</p>\n            <input #code=\"ngModel\" required ngModel name=\"code\" placeholder=\"\" type=\"tel\">\n            <app-normal-input-error name=\"code\" *ngIf=\"code.touched\" [errors]=\"code.errors\">\n            </app-normal-input-error>\n          </div>\n        </div>\n        <button *ngIf=\"!isLoading\"  class=\"green-button\">تأكيد</button>\n      </form>\n      <div class=\"spinner-border text-success\" *ngIf=\"isLoading\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </div>\n\n\n\n\n\n  <div class=\"login-container\" *ngIf=\"step==3\">\n    <header>\n      <h1>نسيت كلمة المرور</h1>\n    </header>\n\n\n    <div class=\"form-containe\">\n\n      <form #form=\"ngForm\" (submit)=\"onChangePassword(form)\">\n        <div class=\"align-inputs\">\n          <div class=\"input-container\">\n            <p>كلمة السر</p>\n            <input ngModel name=\"password\" required #password=\"ngModel\" placeholder=\"\" type=\"password\">\n            <app-normal-input-error name=\"password\" *ngIf=\"password.touched\" [errors]=\"password.errors\">\n            </app-normal-input-error>\n          </div>\n\n          <div class=\"input-container\">\n            <p>تأكيد كلمة السر</p>\n            <input ngModel name=\"confirmPassword\" required #confirmPassword=\"ngModel\" NgModel placeholder=\"\" type=\"password\">\n            <app-normal-input-error name=\"confirm-password\" *ngIf=\"confirmPassword.touched\" [errors]=\"confirmPassword.errors\">\n            </app-normal-input-error>\n          </div>\n        </div>\n        <button *ngIf=\"!isLoading\" class=\"green-button\">تعديل</button>\n      </form>\n      <div class=\"spinner-border text-success\" *ngIf=\"isLoading\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </div>\n\n\n\n</div>\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogMessageComponent } from '../../utils-components/dialog-message/dialog-message.component';\nimport { isScrolledIntoView } from '../../utils-components/jqueryUtils'\nimport * as $ from \"jquery\";\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n  show = true\n\n  constructor(private dilaog: MatDialog) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  showContactInfo() {\n    const confirm = () => {\n      this.dilaog.closeAll()\n    }\n    this.dilaog.open(DialogMessageComponent, { data: { buttons: false, title: 'معلومات التواصل', message: ' עומר חוסין : 0522784070 |  טארק חוסין:  0525145565', confirm } })\n  }\n\n  smoothScrolling(element) {\n    element.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\n  }\n\n\n  @HostListener('window:scroll', ['$event']) // for window scroll events\n  async onScroll() {\n    const video = document.getElementById('video') as HTMLVideoElement\n    const isInView = isScrolledIntoView(video)\n\n    if (isInView && video.muted) {\n      video.controls = true\n      video.muted = false\n      video.currentTime = 0\n      $('#video').animate({ volume: 1}, 500);\n    }\n    else if (!isInView && !video.muted) {\n      $('#video').animate({ volume: 0}, 500);\n      video.controls = false\n      video.muted = true\n    }\n  }\n\n\n\n\n\n\n\n\n}\n","<div class=\"main-page-container\">\n  <section  class=\"header fadeIn\" #header id=\"header\"  >\n\n\n\n    <div class=\"main-box fadeOut\">\n      <div class=\"brand-logo\"></div>\n\n      <div class=\"main-body\">\n        <h1>مرحبا بك في سمارت فون باقة الغربية</h1>\n\n\n        <h3>لاضافة طلب</h3>\n        <a mat-raised-button routerLink=\"client\" color=\"accent\">اضغط هنا</a>\n      </div>\n\n    </div>\n\n\n\n    <div class=\"dash-container\">\n      <div class=\"dash\"></div>\n    </div>\n\n\n    <div class=\"scroll-btn\" (click)=\"smoothScrolling(aboutUs)\">\n      <div class=\"scroll-bar\">\n        <a><span></span></a>\n      </div>\n    </div>\n\n  </section>\n\n  <section class=\"section-2\" id=\"about-us\" #aboutUs>\n    <div class=\"social-icons\">\n      <ul>\n        <a href=\"https://www.facebook.com/smart.phone.baqa.new/?eid=ARDr6ApK4jSINdF5A09_JJyRLjMOuJ5tNm0LBH1xtvoiP005R5IcyVBkOg_LcYLivB62G_gx9q79kWqM\"\n          target=\"blanck\">\n          <li><img src=\"/assets/img/facebook-2.png\" alt=\"\"></li>\n        </a>\n        <a href=\"https://www.instagram.com/smart_phonebaqa/\" target=\"blanck\">\n          <li><img src=\"/assets/img/instagram-2.png\" alt=\"\"></li>\n        </a>\n        <a (click)=\"showContactInfo()\">\n          <li><img src=\"/assets/img/whatsapp.png\" alt=\"\"></li>\n        </a>\n      </ul>\n    </div>\n    <div class=\"group\">\n\n\n      <div class=\"main\">\n\n\n        <div class=\"title\">\n          <div class=\"logo\"></div>\n          <h1>اهلا وسهلا بكم في سمارت فون</h1>\n        </div>\n\n        <h3>هون تفكرش مرتين</h3>\n        <h1>في سمارت فون نوفر لكم</h1>\n      </div>\n\n\n\n      <div class=\"container\">\n        <div class=\"card-showcase\">\n          <div class=\"face face1\">\n            <div class=\"content\">\n              <img src=\"assets/img/online-support.png\" alt=\"\">\n              <h3>خدمة مساعدة محوسبة</h3>\n            </div>\n          </div>\n\n          <div class=\"face face2\">\n            <div class=\"content\">\n              <p>نقدم خدمة التواصل على مدار الساعة عن طريق الهاتف او زيارة مركزنا في باقة الغربية</p>\n              <a href=\"#\">Read More</a>\n            </div>\n          </div>\n        </div>\n\n\n\n\n        <div class=\"card-showcase move-up\">\n          <div class=\"face face1\">\n            <div class=\"content\">\n              <img src=\"assets/img/repair.png\" alt=\"\">\n              <h3>تصليح سريع ومهني</h3>\n            </div>\n          </div>\n\n          <div class=\"face face2\">\n            <div class=\"content\">\n              <p>تصليح جميع الاجهزة والحواسيب على يد التقني عمر حسين صاحب الخبرة الطويلة في المجال</p>\n              <a href=\"#\">Read More</a>\n            </div>\n          </div>\n        </div>\n\n\n\n\n        <div class=\"card-showcase\">\n          <div class=\"face face1\">\n            <div class=\"content\">\n              <img src=\"assets/img/delivery-truck.png\" alt=\"\">\n              <h3>سمارت فون لعندك</h3>\n            </div>\n          </div>\n\n          <div class=\"face face2\">\n            <div class=\"content\">\n              <p>خدمة سمارت فون لعندك للتسهيل على الزبائن وفي ظل الوضع القائم نعمل على تقديم خدماتنا الى بيت الزبون كل\n                ما عليك فعلة اما الاتصال مباشرة ل 0522784070 او اضافة الطلب في الموقع</p>\n              <a href=\"#\">Read More</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n\n\n\n    <div class=\"video-container\">\n      <video id=\"video\" muted={{true}} autoplay loop>\n        <source src=\"../../../assets/videos/smart-phone.mp4\" type=\"video/mp4\">\n      </video>\n    </div>\n\n    <div class=\"navigate-back\" (click)=\"smoothScrolling(header)\">\n    </div>\n\n  </section>\n\n\n\n  <footer>\n    <div class=\"footer-container\">\n\n      <div class=\"box\">\n        <img src=\"./assets/img/location.png\" alt=\"\">\n        <p>باقة الغربية - الشارع الرئيسي</p>\n      </div>\n\n      <div class=\"box\">\n        <img src=\"./assets/img/email.png\" alt=\"\">\n        <p>smart-phone-baqa@hotmail.com</p>\n      </div>\n\n      <div class=\"box\">\n        <img src=\"./assets/img/phone.png\" alt=\"\">\n        <p>052-2784070</p>\n      </div>\n\n    </div>\n\n    <div class=\"footer-social\">\n      <div class=\"box-social\">\n        <img src=\"./assets/img/facebook.png\" alt=\"\">\n        <p>سمارت فون باقة</p>\n      </div>\n\n      <div class=\"box-social\">\n        <img src=\"./assets/img/instagram.png\" alt=\"\">\n        <p>smart-phone</p>\n      </div>\n\n    </div>\n  </footer>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthData } from 'src/app/admin-components/interfaces/auth-data';\nimport { CustomerDbModel } from 'src/app/models/CustomerDbModel';\nimport { Router } from '@angular/router';\nimport { ClientAuthData } from '../client-login/client-auth-data-interface';\nimport { Customer } from 'src/app/models/Customer';\n\n\nconst BACKEND_URL = environment.apiUrl + 'customers/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientAuthService {\n  private isAuthenticated = false\n  private isAuthenticatedListener = new Subject<boolean>()\n  private isLoading = false\n  private token: string\n  private tokenTimer: any\n\n  private user: { firstName: string, lastName: string, _id: string }\n  private userListener = new Subject<{ firstName: string, lastName: string, _id: string }>()\n\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n\n  getIsAuthenticated() {\n    return this.isAuthenticated\n  }\n\n  getIsAuthenticatedListener() {\n    return this.isAuthenticatedListener\n  }\n\n  getIsLoading() {\n    return this.isLoading\n  }\n\n  getUser() {\n    return this.user\n  }\n\n  getUserListener() {\n    return this.userListener.asObservable()\n  }\n\n\n  ngOnDestroy(): void {\n    console.log('clientService died');\n\n  }\n\n\n  onSignUp(customer: CustomerDbModel) {\n    this.isLoading = true\n    this.http.post<{ message: string, token: string, expiresIn: number, user: { firstName: string, lastName: string, _id: string } }>(BACKEND_URL + 'signup', customer).subscribe(res => {\n      console.log('signup success',res);\n      this.authMethod(res)\n      this.router.navigate(['/client'])\n\n    }, err => {\n      this.setAuthenticated(false)\n    })\n  }\n\n\n  login(phoneNumber: string, password: string, keepMelogedIn: boolean = false) {\n    const authData: ClientAuthData = { phone: phoneNumber, password }\n\n    this.isLoading = true\n    this.http.post<{ message: string, token: string, expiresIn: number, user: { firstName: string, lastName: string, _id: string } }>\n      (BACKEND_URL + 'login', authData).subscribe(res => {\n\n        this.authMethod(res, keepMelogedIn)\n        this.router.navigate(['/client'])\n\n      }, err => {\n        this.setAuthenticated(false)\n      })\n  }\n\n  private setAuthenticated(state) {\n    this.isAuthenticated = state\n    this.isAuthenticatedListener.next(state)\n    this.isLoading = false\n  }\n\n\n  private authMethod(res, keepMelogedIn: boolean = false) {\n\n    const token = res.token\n    this.token = token\n    if (token) {\n      this.token = token\n      this.setAuthenticated(true)\n\n      const user = res.user\n      this.user = user\n      this.userListener.next(this.user)\n\n      const expiresInDuration = res.expiresIn\n\n      this.setAuthTimer(expiresInDuration)\n\n      if (keepMelogedIn) {\n        const now = new Date()\n        const expirationDate = new Date((now.getTime() + expiresInDuration * 1000))\n        this.saveAuthData(token, expirationDate, user)\n      }\n\n    }\n  }\n\n\n\n\n\n  ///--- Summary ---////\n  /// Title : Loging out\n  /// Description :\n  /// Returning Args :\n  logout() {\n    this.setAuthenticated(false)\n    this.token = null\n    this.isAuthenticated = false\n    clearTimeout(this.tokenTimer)\n    this.clearAuthData()\n    this.user = null\n    this.router.navigate(['/client/login'])\n  }\n\n\n\n\n\n  ///--- Summary ---////\n  /// Title : Auto authenticate the user\n  /// Description : Automatically authenticating the user\n  /// Returning Args :\n  autoAuthUser(navigateToDashBoard = false) {\n    const authInfo = this.getAuthData()\n\n    if (!authInfo) {\n      return\n    }\n    const now = new Date()\n    const expiresIn = authInfo.expirationDate.getTime() - now.getTime()\n    if (expiresIn > 0) {\n      this.token = authInfo.token\n      this.user = authInfo.user\n      this.userListener.next(this.user)\n      this.setAuthTimer(expiresIn / 1000)\n      this.setAuthenticated(true)\n\n\n      if (navigateToDashBoard) {\n        this.router.navigate(['/client'])\n      }\n    }\n  }\n\n\n\n\n\n  ///--- Summary ---////\n  /// Title : Auth timer for token date\n  /// Description : updating the ui based on the token expire date\n  /// Returning Args :\n\n  private setAuthTimer(duration) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout()\n    }, duration * 1000)\n  }\n\n\n\n  getToken() {\n    return this.token\n  }\n\n\n  ///--- Summary ---////\n  /// Title : getting the authintecation data from local storage\n  /// Description :\n  /// Returning Args :\n\n  private getAuthData() {\n    const token = localStorage.getItem('client-token')\n    const expirationDate = localStorage.getItem('client-expirationDate')\n    const firstName = localStorage.getItem('client-firstName')\n    const lastName = localStorage.getItem('client-lastName')\n    const id = localStorage.getItem('client-id')\n\n    if (!token || !expirationDate || !id || !firstName || !lastName) {\n      return\n    }\n\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      user: {\n        firstName,\n        lastName,\n        _id: id\n      }\n    }\n  }\n\n\n\n  updateUserData(customer: Customer) {\n    console.log(customer);\n\n    localStorage.setItem('client-firstName', customer.firstName)\n    localStorage.setItem('client-lastName', customer.lastName)\n    const authInfo = this.getAuthData()\n    this.user = authInfo.user\n    this.userListener.next(this.user)\n  }\n\n\n\n  ///--- Summary ---////\n  /// Title : Saving to local storage\n  /// Description : saving the auth data to local storage\n  /// Returning Args :\n\n  saveAuthData(token: string, expirationDate: Date, user: { firstName: string, lastName: string, _id: string }) {\n    localStorage.setItem('client-token', token)\n    localStorage.setItem('client-expirationDate', expirationDate.toISOString())\n    localStorage.setItem('client-firstName', user.firstName)\n    localStorage.setItem('client-lastName', user.lastName)\n    localStorage.setItem('client-id', user._id)\n  }\n\n\n\n  ///--- Summary ---////\n  /// Title : Clear auth data from local storage\n  /// Description : clearing the local storage\n  /// Returning Args :\n  private clearAuthData() {\n    localStorage.removeItem('client-token')\n    localStorage.removeItem('client-expirationDate')\n    localStorage.removeItem('client-firstName')\n    localStorage.removeItem('client-lastName')\n    localStorage.removeItem('client-id')\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ClientAuthService } from './client-auth.service';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Customer } from 'src/app/models/Customer';\n\nconst BACKEND_URL = environment.apiUrl + 'customers/'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientInfoService {\n  private requestsStatics: { name: string, value: number }[]\n  private requestsStaticsListener = new Subject<{ name: string, value: number }[]>()\n  private numOfRequests: number\n  private paginationStaticsListener = new Subject<number>()\n\n  constructor(private http: HttpClient, private clientAuthService: ClientAuthService) {\n  }\n\n\n\n  getPaginationStaticsListener() {\n    return this.paginationStaticsListener.asObservable()\n  }\n\n  getStatistics() {\n    return this.requestsStatics\n  }\n\n  getClientRequestsStaticsListener() {\n    return this.requestsStaticsListener.asObservable()\n  }\n\n\n\n  getClientRequestsStatics() {\n    this.http.get<{ message: string, data: { numOfRequests: number, numOfDoneRequests: number } }>\n      (BACKEND_URL + 'getRequestsStatics/' + this.clientAuthService.getUser()._id)\n      .pipe(map((res) => {\n        return {\n          data: Object.keys(res.data).map(name => {\n            let newName\n            if (name == 'numOfRequests') {\n              newName = 'الطلبات'\n            }\n            else if (name == 'numOfDoneRequests') {\n              newName = 'طلبات تمت'\n            }\n\n            return { name: newName, value: res.data[name] }\n          }),\n          numOfRequests: res.data.numOfRequests,\n          numOfDoneRequests: res.data.numOfDoneRequests,\n          message: res.message\n        }\n      }))\n      .subscribe(res => {\n        this.requestsStatics = res.data\n        this.requestsStaticsListener.next([...this.requestsStatics])\n        this.numOfRequests = res.numOfRequests\n        this.paginationStaticsListener.next(this.numOfRequests)\n      })\n  }\n\n\n\n  getCustomerDetails() {\n    return this.http.get<{ message: string, customer: Customer }>(BACKEND_URL + this.clientAuthService.getUser()._id)\n  }\n\n\n  updateCustomer(updateOps) {\n    return this.http.patch<{ message: string, customer: Customer }>(BACKEND_URL + this.clientAuthService.getUser()._id, updateOps)\n  }\n\n}\n","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[addAttributeOn]'\n})\nexport class ClassDirectiveDirective {\n\n  constructor(private element: ElementRef) { }\n\n  @Input() myClassToAdd: string;\n  @Input('addAttributeOn') elementIdToReach: string;\n\n  @HostListener('window:scroll', [])\n  onWindowScroll() {\n    const elementOffsetTop = document.getElementById('toReach').offsetTop;\n    if (elementOffsetTop <= window.pageYOffset) {\n      this.element.nativeElement.classList.add(this.myClassToAdd);\n    } else {\n      this.element.nativeElement.classList.remove(this.myClassToAdd);\n    }\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogMessageComponent } from './utils-components/dialog-message/dialog-message.component';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.log(error);\r\n        let errorMsg = \"قم بفحص اتصال الانترنت !\"\r\n        if (error.error.message) {\r\n          errorMsg = error.error.message\r\n        }\r\n        console.log(this.dialog.openDialogs);\r\n\r\n        if (this.dialog.openDialogs.length <2)\r\n          this.dialog.open(DialogMessageComponent, { data: { title: 'خطاء', message: errorMsg } })\r\n        return throwError(error)\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n\nconst BACKEND_URL = environment.apiUrl + 'cities/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CitiesService {\n  private cities: { _id: string, name: string }[]\n  private citiesListener = new Subject<{ _id: string, name: string }[]>()\n\n  constructor(private http: HttpClient) { }\n\n\n  getCitiesListener() {\n    return this.citiesListener.asObservable()\n  }\n\n  getCites() {\n    this.http.get<{ message: string, cities: { _id: string, name: string }[] }>(BACKEND_URL).subscribe(res => {\n      this.cities = res.cities\n      this.citiesListener.next([...this.cities])\n    })\n  }\n\n\n  addCity(name: string) {\n    return this.http.post<{ message: string }>(BACKEND_URL, {name})\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n\nconst BACKEND_URL = environment.apiUrl + 'companies/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompaniesService {\n  private companies: { _id: string, name: string }[]\n  private companiesListener = new Subject<{ _id: string, name: string }[]>()\n\n  constructor(private http: HttpClient) { }\n\n\n  getCompaniesListener() {\n    return this.companiesListener.asObservable()\n  }\n\n  getCompanies() {\n    this.http.get<{ message: string, companies: { _id: string, name: string }[] }>(BACKEND_URL).subscribe(res => {\n      this.companies = res.companies\n      this.companiesListener.next([...this.companies])\n    })\n  }\n\n\n  addCompany(name: string) {\n    return this.http.post<{ message: string }>(BACKEND_URL, {name})\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Customer } from '../models/Customer';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Subject } from 'rxjs';\n\nconst BACKEND_URL = environment.apiUrl + 'customers/'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService {\n\n  private customers: Customer[]\n  private customersListener = new Subject<{ customers: Customer[], totalCustomers }>()\n  private totalCustomers: number\n\n  constructor(private http: HttpClient) { }\n\n\n  getCustomersListener() {\n    return this.customersListener.asObservable()\n  }\n\n\n\n  getCustomers(search: string = null, page: number = 1, pagesize = 10) {\n    const queryParams = `?page=${page}&pagesize=${pagesize}`\n\n    this.http.post<{ message: string, customers: Customer[], totalCustomers }>(BACKEND_URL + 'search' + queryParams, { search }).subscribe(data => {\n      this.totalCustomers = data.totalCustomers\n      this.customers = data.customers\n      this.customersListener.next({ customers: [...this.customers], totalCustomers: this.totalCustomers })\n    })\n  }\n\n\n  deleteCustomer(customer: Customer) {\n    this.http.delete<{ message: string }>(BACKEND_URL + customer._id).subscribe(res => {\n      console.log('deleted customer', res);\n\n      const index = this.customers.indexOf(customer)\n      console.log(index);\n      this.customers.splice(index, 1)\n      this.customersListener.next({ customers: [...this.customers], totalCustomers: this.totalCustomers })\n    }, err => {\n      console.log(err);\n\n    })\n  }\n\n\n\n\n  updateCustomer(customer: Customer, updateOps) {\n    this.http.patch<{ message: string, customer: Customer }>(BACKEND_URL + customer._id, updateOps).subscribe(res => {\n      //console.log(this.customers);\n      const index = this.customers.indexOf(customer)\n      if (index !== -1) {\n\n        console.log(res.customer);\n        console.log(index);\n\n        this.customers[index] = res.customer\n        this.customersListener.next({ customers: [...this.customers], totalCustomers: this.totalCustomers })\n\n      }\n\n\n    }, err => {\n      console.log(err);\n    })\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n\nconst BACKEND_URL = environment.apiUrl + 'devices/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DevicesService {\n  private devices: { _id: string, model: string }[]\n  private devicesListener = new Subject<{ _id: string, model: string }[]>()\n\n  constructor(private http: HttpClient) { }\n\n\n  getDevicesListener() {\n    return this.devicesListener.asObservable()\n  }\n\n  getDevices() {\n    this.http.get<{ message: string, devices: { _id: string, model: string }[] }>(BACKEND_URL).subscribe(res => {\n      this.devices = res.devices\n      this.devicesListener.next([...this.devices])\n    })\n  }\n\n\n  getDevicesByCompanyId(companyId: string) {\n    this.http.get<{ message: string, devices: { _id: string, model: string }[] }>(BACKEND_URL + companyId).subscribe(res => {\n      this.devices = res.devices\n      this.devicesListener.next([...this.devices])\n    })\n  }\n\n\n  addDevice(model: string, released: Date, company: string) {\n    return this.http.post<{ message: string }>(BACKEND_URL, { model, released ,company})\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\nconst BACKEND_URL = environment.apiUrl + 'forgotPassword/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForgotPasswordService {\n\n  code: string\n  forgotPasswordId: string\n  phone: string\n\n\n  constructor(private http: HttpClient) { }\n\n\n\n  sendMessageAgain() {\n    this.http.post<{ message }>(BACKEND_URL + 'again', { forgotPasswordId:this.forgotPasswordId }).subscribe(res=>{\n    })\n  }\n\n\n  addForgotPasswordRequest(phone: string, callback: Function) {\n    this.phone = phone\n    this.http.post<{ code: string, forgotPasswordId: string }>(BACKEND_URL, { phone }).subscribe(res => {\n      this.code = res.code\n      this.forgotPasswordId = res.forgotPasswordId\n      callback()\n    })\n  }\n\n\n\n  verifyRequest(code: string,callback:Function) {\n    this.http.post<{ message: string }>(BACKEND_URL + 'verify', { code, forgotPasswordId: this.forgotPasswordId }).subscribe(res => {\n      callback()\n    })\n  }\n\n\n\n  changePassword(password: string,callback:Function) {\n    this.http.patch<{ message: string }>(BACKEND_URL, { password, phone: this.phone, forgotPasswordId: this.forgotPasswordId }).subscribe(res => {\n      callback()\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n\nconst BACKEND_URL = environment.apiUrl + 'issues/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssuesService {\n  private issues: { _id: string, name: string }[]\n  private issuesListener = new Subject<{ _id: string, name: string }[]>()\n\n  constructor(private http: HttpClient) { }\n\n\n  getIssuesListener() {\n    return this.issuesListener.asObservable()\n  }\n\n  getIssues() {\n    this.http.get<{ message: string, issues: { _id: string, name: string }[] }>(BACKEND_URL).subscribe(res => {\n      this.issues = res.issues\n      this.issuesListener.next([...this.issues])\n    })\n  }\n\n\n  addIssue(name: string) {\n    return this.http.post<{ message: string }>(BACKEND_URL, {name})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { RequestDbModel } from '../models/RequestDbModel';\nimport { Request } from '../models/Request';\nimport { ClientAuthService } from '../client/services/client-auth.service';\n\n\nconst BACKEND_URL = environment.apiUrl + 'requests/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestsService {\n  private requests: Request[] = []\n  private requestsListener = new Subject<{ requests: Request[], max: number }>()\n  private max: number\n\n  private request: Request\n  private requestListener = new Subject<Request>()\n\n  constructor(private http: HttpClient, private clientAuthService: ClientAuthService) { }\n\n\n  getRequestsListener() {\n    return this.requestsListener.asObservable()\n  }\n\n\n  getRequestListener() {\n    return this.requestListener.asObservable()\n  }\n\n  getRequests(page: number = 1, pagesize = 10, filter: string = null, search: string = null) {\n    const queryParams = `?page=${page}&pagesize=${pagesize}`\n\n    this.http.post<{ message: string, requests: Request[], max: number }>(BACKEND_URL + queryParams, { search, filter }).subscribe(res => {\n      this.requests = res.requests\n      this.max = res.max\n      this.requestsListener.next({ requests: [...this.requests], max: res.max })\n    })\n  }\n\n\n  getRequestsByCustomerId(page: number = 1, pagesize = 10) {\n    const customerId = this.clientAuthService.getUser()._id\n    const queryParams = `requestsByCustomerId?page=${page}&pagesize=${pagesize}&customerId=${customerId}`\n\n    this.http.get<{ message: string, requests: Request[] }>(BACKEND_URL + queryParams).subscribe(res => {\n      this.requests = res.requests\n      this.requestsListener.next({ requests: [...this.requests], max: null })\n    })\n  }\n\n\n  getRequestById(requestId: string) {\n    const userId = this.clientAuthService.getUser()._id\n    const queryParams = `getRequest?customerId=${userId}&requestId=${requestId}`\n    this.http.get<{ message: string, request: Request }>(BACKEND_URL + 'getRequest/' + queryParams).subscribe(res => {\n      this.request = res.request\n      this.requestListener.next({ ...this.request })\n    })\n  }\n\n\n  addRequest(request: RequestDbModel, error: Function, success: Function) {\n    this.http.post<{ message: string, request: Request }>(BACKEND_URL, request).subscribe(res => {\n      this.requests.push(res.request)\n      this.requestsListener.next({ requests: [...this.requests], max: this.max + 1 })\n      success()\n    }, err => {\n      error()\n    })\n  }\n\n\n\n  updateReuqest(requestId: string, updateOp) {\n    return this.http.patch<{ message: string }>(BACKEND_URL + requestId, updateOp)\n  }\n\n\n  deleteRequest(requestId: string, success) {\n    this.http.delete<{ message: string }>(BACKEND_URL + requestId).subscribe(res => {\n      const newArray = this.requests.filter(req => {\n        return req._id !== requestId\n      })\n      this.requests = newArray\n      this.requestsListener.next({ requests: [...this.requests], max: this.max - 1 })\n      success()\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n\nconst BACKEND_URL = environment.apiUrl + 'sms/'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SMSService {\n\n  constructor(private http: HttpClient) { }\n\n\n\n  sendMessage(to: string, toAll: boolean, message: string) {\n    this.http.post<{ message: string }>(BACKEND_URL,{to,toAll,message}).subscribe(res=>{\n      console.log(res);\n    })\n  }\n\n\n\n}\n","export class Customer {\r\n  firstName: string\r\n  lastName: string\r\n  phone: string\r\n  gender: string\r\n  city: { _id: string, name: string }\r\n  numOfRequests\r\n  numOfDoneRequests\r\n  createdAt: Date\r\n  _id: string\r\n}\r\n","export class Device {\r\n  company:string\r\n  model: string\r\n  released: Date\r\n  _id: string\r\n\r\n  constructor(){\r\n    this.model=\"iPhone X\"\r\n    this.released=new Date()\r\n    this._id=\"1\"\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-bootstrap-dialog',\n  templateUrl: './bootstrap-dialog.component.html',\n  styleUrls: ['./bootstrap-dialog.component.css']\n})\nexport class BootstrapDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n\n  <p data-toggle=\"modal\" data-target=\"#exampleModalLong\" class=\"link\">تعديل</p>\n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"exampleModalLong\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h3  id=\"exampleModalLongTitle\">تعديل رقم الهاتف</h3>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <app-phone-auth></app-phone-auth>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-message',\n  templateUrl: './dialog-message.component.html',\n  styleUrls: ['./dialog-message.component.css']\n})\nexport class DialogMessageComponent implements OnInit {\n\n\n  constructor(private dialogRef: MatDialogRef<DialogMessageComponent>, @Inject(MAT_DIALOG_DATA) public data: { buttons: boolean, title: string, message: string, confirm: Function, cancel: Function }) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onConfirm() {\n    if (this.data.confirm)\n      this.data.confirm()\n    this.dialogRef.close(true)\n  }\n\n  onCancel() {\n    if (this.data.cancel)\n      this.data.cancel()\n  }\n}\n","<div class=\"dialog-container\">\n\n  <div class=\"content\">\n    <h1 mat-dialog-title>{{data.title}} <span *ngIf=\"!data.title\">Message !</span></h1>\n    <p mat-dialog-content>{{data.message}}</p>\n  </div>\n\n  <div mat-dialog-actions *ngIf=\"data.buttons\">\n    <button mat-button color=\"warn\" (click)=\"onCancel()\" mat-dialog-close>الغاء</button>\n    <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">تأكيد</button>\n\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Customer } from 'src/app/models/Customer';\nimport { CitiesService } from 'src/app/globalServices/cities.service';\nimport { Subscription } from 'rxjs';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { CustomersService } from 'src/app/globalServices/customers.service';\n\n@Component({\n  selector: 'app-edit-customer-dialog',\n  templateUrl: './edit-customer-dialog.component.html',\n  styleUrls: ['./edit-customer-dialog.component.css']\n})\nexport class EditCustomerDialogComponent implements OnInit {\n  cities\n  citiesSub: Subscription\n  form: FormGroup\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { customer: Customer },\n    private citiesService: CitiesService,\n    private customerService: CustomersService,\n    private dialogRef: MatDialogRef<EditCustomerDialogComponent>) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      'firstName': new FormControl(this.data.customer.firstName),\n      'lastName': new FormControl(this.data.customer.lastName),\n      'city': new FormControl(this.data.customer.city._id),\n      'phone': new FormControl(this.data.customer.phone)\n    })\n\n    this.citiesService.getCites()\n    this.citiesSub = this.citiesService.getCitiesListener().subscribe(res => {\n      this.cities = res\n      this.form.get('city').setValue(this.data.customer.city._id)\n    })\n  }\n\n\n\n\n  onUpdate() {\n    const updateOps = []\n\n    const hash = Object.keys(this.form.value).map(name => ({ name, value: this.form.value[name] }))\n\n    for (let i = 0, k = 0; i < hash.length; i++) {\n      if (hash[i].value != this.data.customer[hash[i].name] && hash[i].value != this.data.customer[hash[i].name]?._id) {\n        updateOps[k++] = {\n          'name': hash[i].name,\n          'value': hash[i].value\n        }\n      }\n    }\n\n    this.customerService.updateCustomer(this.data.customer, updateOps)\n    this.dialogRef.close()\n  }\n\n\n  ngOnDestroy(): void {\n    this.citiesSub.unsubscribe()\n  }\n\n}\n","<div class=\"dialog-container\">\n\n  <h2 mat-dialog-title>تعديل معلومات الزبون</h2>\n\n  <mat-dialog-content class=\"mat-typography\">\n    <form [formGroup]=\"form\"  class=\"card\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>الاسم الشخصي</mat-label>\n        <input formControlName=\"firstName\" matInput>\n      </mat-form-field>\n\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>العائلة</mat-label>\n        <input formControlName=\"lastName\" matInput>\n      </mat-form-field>\n\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>الهاتف</mat-label>\n        <input formControlName=\"phone\" matInput>\n      </mat-form-field>\n\n\n      <mat-form-field appearance=\"fill\" [hideRequiredMarker]=\"false\" [floatLabel]=\"true\">\n        <mat-select formControlName=\"city\" >\n          <mat-option value=\"-1\">اختر المدينة</mat-option>\n          <mat-option *ngFor=\"let city of cities\" [value]=\"city._id\">{{city.name}}</mat-option>\n        </mat-select>\n        <mat-label>\n        </mat-label>\n      </mat-form-field>\n\n\n    </form>\n\n\n\n  </mat-dialog-content>\n\n  <mat-dialog-actions align=\"end\">\n    <button mat-stroked-button mat-dialog-close color=\"warn\">الغاء</button>\n    <button class=\"white\" mat-raised-button (click)=\"onUpdate()\" color=\"primary\" cdkFocusInitial>تعديل</button>\n  </mat-dialog-actions>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PhoneAuthService } from '../phone-auth/phone-auth.service';\nimport { ClientInfoService } from 'src/app/client/services/client-info.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-edit-phone-dialog',\n  templateUrl: './edit-phone-dialog.component.html',\n  styleUrls: ['./edit-phone-dialog.component.css'],\n  providers: [PhoneAuthService, ClientInfoService]\n})\nexport class EditPhoneDialogComponent implements OnInit {\n  phoneNumber\n\n  constructor(private clientService: ClientInfoService,\n    private dialogRef: MatDialogRef<EditPhoneDialogComponent>) { }\n\n\n  ngOnInit(): void {\n  }\n\n\n  onChangePhoneNumber(e) {\n    console.log(e);\n    const updateOps = [\n      { name: 'phone', value: e }\n    ]\n\n    this.clientService.updateCustomer(updateOps).subscribe(res => {\n      console.log(res);\n      this.dialogRef.close(e)\n    })\n  }\n\n}\n","<div>\n  <app-phone-auth (phoneNumber)=\"onChangePhoneNumber($event)\"></app-phone-auth>\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ValidationErrors, NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-input-error',\n  templateUrl: './input-error.component.html',\n  styleUrls: ['./input-error.component.css']\n})\nexport class InputErrorComponent implements OnInit {\n  @Input() errors: ValidationErrors;\n  @Input() controller: NgModel;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  getError() {\n    if (!this.errors)\n      return\n\n    if (this.errors['required']) {\n      return 'required'\n    }\n\n\n    if (this.errors['email']) {\n      return 'email'\n    }\n\n\n    if (this.errors['email']) {\n      return 'email'\n    }\n\n\n    if (this.errors['minlength']) {\n      return 'minlength'\n    }\n\n\n    if (this.errors['maxlength']) {\n      return 'maxlength'\n    }\n\n    if (this.errors['phoneNumber']) {\n      return 'phoneNumber'\n    }\n\n    if (this.errors['passwordNotMatch']) {\n      return 'passwordNotMatch'\n    }\n\n\n  }\n}\n","<mat-error *ngIf=\"getError()==='required'\" >this field is <b>required</b></mat-error>\n<mat-error *ngIf=\"getError()==='email' \">please enter a valid email</mat-error>\n<mat-error *ngIf=\"getError()==='minlength'\" >{{controller.name}} must be at least {{controller.errors.minlength.requiredLength}} charachters</mat-error>\n<mat-error *ngIf=\"getError()==='maxlength'\" >{{controller.name}} must be no longer than {{controller.errors.maxlength.requiredLength}} charachters</mat-error>\n<mat-error *ngIf=\"getError()==='passwordNotMatch'\" >passwords dosent <b>match</b></mat-error>\n<mat-error *ngIf=\"getError()=== 'phoneNumber'\" >enter a valid phone <b>number</b></mat-error>\n\n\n","import * as $ from \"jquery\";\r\n\r\n\r\n\r\nexport const isScrolledIntoView =  (elem) => {\r\n  var docViewTop = $(window).scrollTop();\r\n  var docViewBottom = docViewTop + $(window).height();\r\n  var elemTop = $(elem).offset().top;\r\n  var elemBottom = elemTop + $(elem).height();\r\n  return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));\r\n}\r\n\r\n\r\n\r\nexport const fadeIn =  () => {\r\n\r\n\r\n\r\n//   $(window).scroll(function () {\r\n//     var mypos = $(window).scrollTop();\r\n//     $(\".fadeIn\").each(function () {\r\n//         if (mypos > $(this).offset().top - 150) {\r\n//             $(this).css('opacity', 1);\r\n//         };\r\n//     });\r\n// });\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ValidationErrors, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-normal-input-error',\n  templateUrl: './normal-input-error.component.html',\n  styleUrls: ['./normal-input-error.component.css']\n})\nexport class NormalInputErrorComponent implements OnInit {\n  @Input() errors: ValidationErrors;\n  @Input() name: string\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p *ngIf=\"errors && errors['required']\">{{name}} is <b>required</b></p>\n<p *ngIf=\"errors &&errors['email'] \">please enter a valid email</p>\n<p *ngIf=\"errors &&errors['minlength']\">{{name}} must be at least\n  {{errors.minlength.requiredLength}} charachters</p>\n<p *ngIf=\"errors &&errors['maxlength']\">{{name}} must be no longer than\n  {{errors.maxlength.requiredLength}} charachters</p>\n<p *ngIf=\"errors &&errors['phoneNumber']\">phone number not valid</p>\n<p *ngIf=\"errors &&errors['name']\">name must contain letters only</p>\n<p *ngIf=\"errors &&errors['passwordNotMatch']\">Passwords not match</p>\n<p *ngIf=\"errors &&errors['text']\">{{name}} must contain letters and spaces only</p>\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { PhoneAuthService } from './phone-auth.service';\nimport { Router } from '@angular/router';\nimport { selectInput, phoneNumber } from '../validators'\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-phone-auth',\n  templateUrl: './phone-auth.component.html',\n  styleUrls: ['./phone-auth.component.css']\n})\nexport class PhoneAuthComponent implements OnInit {\n  @Output() isDone = new EventEmitter<boolean>()\n  @Output() phoneNumber = new EventEmitter<string>()\n  @Input() nav: string;\n\n  formNumberValidate: FormGroup\n  formNumberVerify: FormGroup\n  isLoading = false\n  authError = false\n  authSuccess = false\n  step = 1\n  numberOfDigits = 5\n  numberArr = []\n  isVerifiedSub: Subscription\n\n  constructor(private phoneService: PhoneAuthService, private router: Router) {\n    for (let i = 0; i < this.numberOfDigits; i++) {\n      this.numberArr[i] = i + 1\n    }\n  }\n\n\n\n  ngOnInit(): void {\n    this.setUpForms()\n    this.isVerifiedSub = this.phoneService.getIsVierifiedListener().subscribe(isVerified => {\n      this.isLoading = false\n      this.authSuccess = isVerified\n\n      if (!isVerified) {\n        this.formNumberVerify.reset()\n        document.getElementById('input1').focus()\n        this.isLoading = false\n        this.authError = true\n      }\n\n      if (isVerified) {\n        if (this.nav)\n          this.router.navigate([this.nav])\n        else {\n          this.isDone.emit(true)\n          this.phoneNumber.emit(this.phoneService.getPhoneNumberAndCountryCode().phoneNumber)\n        }\n      }\n    })\n  }\n\n\n  ngOnDestroy(): void {\n    this.isVerifiedSub.unsubscribe()\n  }\n\n\n  setUpForms() {\n    this.formNumberValidate = new FormGroup({\n      // 'countryCode': new FormControl('-1', {\n      //   asyncValidators: [selectInput]\n      // }),\n      'phoneNumber': new FormControl(null, { asyncValidators: [phoneNumber] }),\n    })\n\n\n    this.formNumberVerify = new FormGroup({\n      'input1': new FormControl(null),\n      'input2': new FormControl(null),\n      'input3': new FormControl(null),\n      'input4': new FormControl(null),\n      'input5': new FormControl(null)\n    })\n\n  }\n\n  onSelect(controler: AbstractControl) {\n    controler.markAsTouched()\n  }\n\n\n\n\n\n\n\n\n  nextFocus(num, event: KeyboardEvent) {\n    if (num <= this.numberOfDigits) {\n      this.authError = false\n\n      if (num > 2 && event.code === 'Backspace') {\n        const element = document.getElementById('input' + (num - 2)) as HTMLInputElement\n        element.focus()\n        element.setSelectionRange(0, element.value.length)\n        return\n      }\n      else if (event.code !== 'Backspace') {\n        const parent = document.getElementById('input' + (num - 1)) as HTMLInputElement\n        if (parent.value !== '') {\n          const element = document.getElementById('input' + num) as HTMLInputElement\n          element.focus()\n        }\n      }\n\n\n    }\n    else {\n      if (!this.phoneService.getPhoneAuthId()) {\n        if (event.code === 'Backspace') {\n          const element = document.getElementById('input' + (num - 2)) as HTMLInputElement\n          element.setSelectionRange(0, element.value.length)\n          element.focus()\n        }\n        return\n      }\n      this.isLoading = true\n\n      let code = ''\n\n      for (let i = 1; i <= 5; i++) {\n        code += this.formNumberVerify.value['input' + i]\n      }\n      this.phoneService.verifyPhone(code, this.phoneService.getPhoneAuthId())\n    }\n  }\n\n\n\n\n\n\n\n  onSendingSMS(isResend: boolean = false) {\n    console.log(this.formNumberValidate.controls);\n\n    if (this.formNumberValidate.invalid) {\n      this.formNumberValidate.markAllAsTouched()\n      return\n    }\n\n    const { phoneNumber, countryCode } = this.formNumberValidate.value\n\n    this.isLoading = true\n\n    const error = () => {\n      this.authError = false\n      this.authSuccess = false\n      this.isLoading = false\n    }\n\n    this.phoneService.sendSMS(countryCode, phoneNumber, () => {\n      if (!isResend)\n        this.step++\n      this.isLoading = false\n    }, error)\n  }\n\n\n  resetForm() {\n    this.formNumberValidate.reset()\n    this.formNumberVerify.reset()\n    this.step = 1\n    this.authSuccess = false\n    this.isLoading = false\n    this.phoneService.reset()\n  }\n}\n","<div class=\"box-container\">\n\n  <div *ngIf=\"step==1\" class=\"phone-number-container box\">\n    <div class=\"box-header\">\n      <h1>رقم الهاتف</h1>\n    </div>\n\n    <form [formGroup]=\"formNumberValidate\" (submit)=\"onSendingSMS()\">\n      <div>\n        <div class=\"one-line\">\n\n          <!-- <select formControlName=\"countryCode\" (change)=\"onSelect(formNumberValidate.get('countryCode'))\">\n            <option value=\"-1\">select...</option>\n            <option value=\"+972\">+972</option>\n          </select> -->\n\n\n          <input matInput name=\"phone number\" formControlName=\"phoneNumber\" maxlength=\"20\" placeholder=\"052-0000000\"\n            type=\"text\">\n\n        </div>\n\n        <div class=\"errors\">\n          <app-normal-input-error *ngIf=\"formNumberValidate.get('phoneNumber').touched\" name=\"phone number\"\n            [errors]=\"formNumberValidate.get('phoneNumber').errors\">\n          </app-normal-input-error>\n          <!-- <app-normal-input-error *ngIf=\"formNumberValidate.get('countryCode').touched\" name=\"country code\"\n            [errors]=\"formNumberValidate.get('countryCode').errors\">\n          </app-normal-input-error> -->\n        </div>\n\n\n\n      </div>\n\n      <mat-spinner color=\"accent\" *ngIf=\"isLoading\"></mat-spinner>\n\n      <div *ngIf=\"!isLoading\" class=\"button\">\n        <button>ارسل</button>\n      </div>\n    </form>\n  </div>\n\n\n\n  <div *ngIf=\"step==2\" class=\"verify-container box\">\n    <div class=\"box-header\">\n      <h1>ادخل الكود</h1>\n    </div>\n\n    <p>ستصلك رسالة الى الرقم الذي ادخلتة عليك ادخال الكود المرفق في الرسالة</p>\n\n    <form *ngIf=\"!authSuccess\" [formGroup]=\"formNumberVerify\">\n      <tr>\n        <td *ngFor=\"let num of numberArr; let i=index\">\n          <input type=\"text\" [id]=\"'input'+num\" placeholder=\"&#9679;\"  size=\"1\" [formControlName]=\"'input'+num\" maxlength=\"1\"\n            (keyup)=\"nextFocus(num+1,$event)\">\n        </td>\n      </tr>\n\n      <p>لارسال رسالة مرة اخرى   <span class=\"click\" (click)=\"onSendingSMS(true)\"> اضغط هنا </span></p>\n\n    </form>\n    <p class=\"error\" *ngIf=\"authError\">الرقم الذي ادخلتة خاطئ حاول مرة اخرى</p>\n    <p class=\"success\" *ngIf=\"authSuccess\">تم التوثيق</p>\n    <p class=\"success click\"  (click)=\"resetForm()\">للاعادة</p>\n    <mat-spinner color=\"accent\" *ngIf=\"isLoading\"></mat-spinner>\n\n  </div>\n\n\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\nconst BASE_URL = environment.apiUrl\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhoneAuthService {\n  private authPhoneNumber: string\n  private authCountryCode: string\n\n  private isVerified: boolean = false\n  private isVerifiedListener = new Subject<boolean>()\n\n  private isLoading = new Subject<boolean>()\n  private phoneAuthId: string\n\n  constructor(private http: HttpClient) { }\n  ngOnDestroy(): void {\n    console.log('phone service destroied');\n  }\n\n  getPhoneAuthId() {\n    return this.phoneAuthId\n  }\n\n  getPhoneNumberAndCountryCode() {\n    return { phoneNumber: this.authPhoneNumber, countryCode: this.authCountryCode }\n  }\n\n\n  getIsVerified() {\n    return this.isVerified\n  }\n\n  getIsVierifiedListener() {\n    return this.isVerifiedListener.asObservable()\n  }\n\n  reset(){\n    this.phoneAuthId=null\n    this.isVerified=false\n    this.isVerifiedListener.next(false)\n  }\n\n  sendSMS(countryCode: string, phoneNumber: string, success: Function = null, error: Function = null) {\n    this.isLoading.next(true)\n    this.authPhoneNumber = phoneNumber\n    this.authCountryCode = countryCode\n    this.http.post<{ message: string, _id: string }>(BASE_URL + 'phoneAuth', { countryCode, phoneNumber }).subscribe(res => {\n      this.phoneAuthId = res._id\n      success()\n    }, err => {\n      error(err)\n    })\n  }\n\n\n  verifyPhone(code: string, _id: string) {\n    this.http.post(BASE_URL + 'phoneAuth/verifyNumber', { code, _id }).subscribe(res => {\n      this.isVerified = true\n      this.isVerifiedListener.next(true)\n      console.log(res);\n\n    }, err => {\n      console.log(err);\n      this.isVerified = false\n      this.isVerifiedListener.next(this.isVerified)\n    })\n  }\n\n}\n","export const statusHandler = (status) => {\r\n  let color\r\n\r\n  switch (status) {\r\n    case 'DONE':\r\n      color = '#60bb46'\r\n      break\r\n    case 'CANCEL':\r\n      color = '#F60D0E'\r\n      break\r\n    case 'IN-PROGRESS':\r\n      color = '#F86300'\r\n      break\r\n  }\r\n\r\n\r\n  return {\r\n    'background': color\r\n  }\r\n}\r\n","import { FormControl } from \"@angular/forms\";\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nexport const selectInput = (control: FormControl): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  const frObs = Observable.create((observer: Observer<{ [key: string]: any }>) => {\r\n\r\n    if (control.value === '-1') {\r\n      observer.next({ required: true })\r\n    } else {\r\n      observer.next(null)\r\n    }\r\n\r\n    observer.complete()\r\n  })\r\n\r\n  return frObs\r\n}\r\n\r\n\r\nexport const nameCheck = (control: FormControl): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  const frObs = Observable.create((observer: Observer<{ [key: string]: any }>) => {\r\n    const { value } = control\r\n    if (/^[a-z\\u0590-\\u05fe\\u0621-\\u064A]+$/.test(value)) {\r\n      observer.next(null)\r\n    } else {\r\n      observer.next({ name: true })\r\n    }\r\n    observer.complete()\r\n  })\r\n\r\n  return frObs\r\n}\r\n\r\n\r\n\r\nexport const textCheck = (control: FormControl): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  const frObs = Observable.create((observer: Observer<{ [key: string]: any }>) => {\r\n    const { value } = control\r\n    if (/^([a-z\\u0590-\\u05fe\\u0621-\\u064A]+\\s)*[a-z\\u0590-\\u05fe\\u0621-\\u064A]+$/.test(value)) {\r\n      observer.next(null)\r\n    } else {\r\n      observer.next({ text: true })\r\n    }\r\n    observer.complete()\r\n  })\r\n\r\n  return frObs\r\n}\r\n\r\n\r\nexport const matchPassword = (passwordControl: FormControl, verifyControl: FormControl) => {\r\n  const password = passwordControl.value\r\n  const verifyPassword = verifyControl.value\r\n\r\n  if (password !== verifyPassword) {\r\n    verifyControl.setErrors({\r\n      ...verifyControl.errors,\r\n      passwordNotMatch: true\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const phoneNumber = (control: FormControl): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  const frObs = Observable.create((observer: Observer<{ [key: string]: any }>) => {\r\n    const value: string = control.value\r\n    let flag = true\r\n\r\n\r\n    if (!value || (!value && value.length === 0)) {\r\n      observer.next({ required: true })\r\n      flag = false\r\n    }\r\n    else if (value.length < 9) {\r\n      observer.next({ minlength: { requiredLength: 9 } })\r\n      flag = false\r\n    }\r\n    else {\r\n      for (let i = 0; i < value.length && flag; i++) {\r\n        if (value[i] > '9' || value[i] < '0') {\r\n          observer.next({ phoneNumber: true })\r\n          flag = false\r\n        }\r\n      }\r\n    }\r\n\r\n    if (flag) {\r\n      observer.next(null)\r\n    }\r\n\r\n    observer.complete()\r\n  })\r\n\r\n  return frObs\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'http://localhost:3000/api/',\n  url:'http://localhost:3000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}